{"version":3,"sources":["task-breaker.dev.js"],"names":["jQuery","document","ready","$","window","load","__ThriveProjectModel","Backbone","View","extend","id","project_id","task_breakerProjectSettings","page","priority","current_page","max_page","min_page","total","show_completed","total_pages","ThriveProjectModel","__ThriveProjectView","el","model","search","template","events","click .task_breaker-project-tab-li-item-a","click .next-page","click .prev-page","submit #task-breaker-search-task-form","change #task_breaker-task-filter-select","switchView","e","elementID","$elementClicked","currentTarget","$tab_disabled","$is_tab_enabled","inArray","attr","console","log","css","removeClass","$active_content","$element","parent","addClass","hideFilters","hide","showFilters","show","searchTasks","event","keywords","val","length","location","href","encodeURI","filter","this","value","currentRoute","history","getFragment","render","next","preventDefault","currPage","prev","single","ticket_id","progress","__this","renderTask","response","message","html","message_long","showEditForm","task_id","__taskEditor","tinymce","get","setContent","task","taskEditor","removeAttr","title","description","getElementById","options","each","assign_users_meta","members_stack","key","option","createElement","ID","text","display_name","selected","appendChild","autoSuggestMembers","change","__callback","ajax","url","ajaxurl","method","dataType","data","action","nonce","success","httpResponse","stats","error","initialize","isShow","__display","__opacity","display","opacity","updateStats","task_status","status","toLowerCase","remaining","completed","width","Math","ceil","selectElement","clearSelect","$resultTemplate","result","avatar","$state","select2","maximumInputLength","placeholder","allowClear","minimumResultsForSearch","Infinity","minimumInputLength","tag","params","query","group_id","current_group_id","term","user_id_collection","task_breakerAjaxUrl","delay","cache","templateResult","ThriveProjectView","__ThriveProjectRoute","Router","routes","tasks","tasks/dashboard","tasks/settings","tasks/completed","tasks/add","tasks/edit/:id","tasks/page/:page","tasks/view/:id","tasks/search/:search_keyword","view","index","dashboard","settings","add","editors","task_breakerTaskDescription","completed_tasks","edit","view_task","ThriveProjectRoute","on","route","start","click","element","taskDescription","getContent","milestone_id","task_breakerTaskConfig","currentProjectId","user_id","currentUserId","parseInt","trim","files","target","FormData","append","type","processData","contentType","textStatus","jqXHR","errorThrown","xhr","myXhr","ajaxSettings","upload","addEventListener","lengthComputable","loaded","max","complete","taskDescriptionObject","httpRequestParameters","_delete_confirm","confirm","task_project_id","__http_params","message_text","updateTaskBtn","comment_ticket_id","comment_details","task_priority","comment_completed","details","confirm_delete","comment_ticket","comment_id","fadeOut","remove","projectContent","__projectContentObj","content","prepend","reload","setTimeout","alert","redirect"],"mappings":"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","file":"task-breaker.min.js","sourcesContent":["jQuery(document).ready(function($) {\n\t'use strict'\n\t$(window).load( function() {  \n\nvar __ThriveProjectModel = Backbone.View.extend({\n    id: 0,\n    project_id: task_breakerProjectSettings.project_id,\n    page: 1,\n    priority: -1,\n    current_page: 1,\n    max_page: 1,\n    min_page: 1,\n    total: 0,\n    show_completed: 'no',\n    total_pages: 0,\n});\n\nvar ThriveProjectModel = new __ThriveProjectModel();\n\nvar __ThriveProjectView = Backbone.View.extend({\n\n    el: 'body',\n    model: ThriveProjectModel,\n    search: '',\n    template: '',\n    events: {\n        \"click .task_breaker-project-tab-li-item-a\": \"switchView\",\n        \"click .next-page\": \"next\",\n        \"click .prev-page\": \"prev\",\n        \"submit #task-breaker-search-task-form\": \"searchTasks\",\n        \"change #task_breaker-task-filter-select\": \"filter\"\n    },\n\n    switchView: function( e, elementID ) {\n\n        if (e) {\n            \n            var $elementClicked = $( e.currentTarget );\n\n            // Disable clicking on the 'Add New Tab' if we are on 'Task Add' Route.\n            var $tab_disabled = ['task_breaker-project-edit-tab', 'task_breaker-project-edit', 'task_breaker-project-add-new'];\n            var $is_tab_enabled = $.inArray( $elementClicked.attr( 'id' ), $tab_disabled );\n\n            console.log( $is_tab_enabled );\n\n            if ( -1 !== $is_tab_enabled ) {\n                console.log( $elementClicked.attr( 'id' ) );\n                return false;\n            } \n\n        }\n\n        $('#task_breaker-project-edit-tab').css('display', 'none');\n        $('#task_breaker-project-add-new').css('display', 'none');\n\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n\n        var $active_content = \"\";\n\n        if (e) {\n\n            var $element = $(e.currentTarget);\n\n            $active_content = $element.attr('data-content');\n\n            // Activate selected tab.\n            $element.parent().addClass('active');\n\n            $('div[data-content=' + $active_content + ']').addClass('active');\n\n        } else {\n\n            $(elementID).addClass('active');\n\n            $active_content = $(elementID).attr('data-content');\n\n            $('a[data-content=' + $active_content + ']').parent().addClass('active');\n        }\n    },\n\n    hideFilters: function() {\n        $('#task_breaker-tasks-filter').hide();\n    },\n\n    showFilters: function() {\n        $('#task_breaker-tasks-filter').show();\n    },\n\n    searchTasks: function( event ) {\n        \n        var keywords = $('#task_breaker-task-search-field').val();\n\n        if ( 0 === keywords.length ) {\n            location.href = '#tasks';\n        } else {\n            location.href = '#tasks/search/' + encodeURI(keywords);\n        }\n\n        return false;\n\n    },\n\n    filter: function(e) {\n        this.model.priority = e.currentTarget.value;\n\n        var currentRoute = Backbone.history.getFragment();\n\n        if (currentRoute != 'tasks') {\n            location.href = '#tasks';\n        } else {\n            this.render();\n        }\n    },\n\n    next: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage < this.model.max_page) {\n            this.model.page = ++currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    prev: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage > this.model.min_page) {\n            this.model.page = --currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    single: function(ticket_id) {\n        this.progress(true);\n        var __this = this;\n        this.template = 'single_task_index';\n        // load the task\n        this.renderTask(function( response ) {\n\n            __this.progress( false );\n\n            if ( response.message == 'fail' ) {\n                $('#task_breaker-project-tasks').html(\"<p class='info' id='message'>\"+response.message_long+\"</p>\");\n            }\n\n            if ( response.html ) {\n                $('#task_breaker-project-tasks').html(response.html);\n            }\n        });\n    },\n\n    showEditForm: function(task_id) {\n\n        var __this = this;\n\n        var __taskEditor = '';\n\n        if ( typeof tinymce !== 'undefined' ) {\n            \n            __taskEditor = tinymce.get('task_breakerTaskEditDescription');\n\n        } \n\n        this.progress(true);\n\n        if ( __taskEditor ) {\n            __taskEditor.setContent( '' );\n        } else {\n            $( '#task_breakerTaskEditDescription' ).val( '' );\n        }\n\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('a#task_breaker-project-edit-tab').css('display', 'block').parent().addClass('active');\n        $('#task_breaker-project-edit-context').addClass('active');\n\n        $('#task_breakerTaskId').attr('disabled', true).val('loading...');\n        $('#task_breakerTaskEditTitle').attr('disabled', true).val('loading...');\n        $(\"#task_breaker-task-edit-select-id\").attr('disabled', true);\n\n        this.model.id = task_id;\n\n        // Render the task.\n        this.renderTask( function( response ) {\n\n            __this.progress( false );\n\n            if ( response.task ) {\n\n                var task = response.task;\n\n                var taskEditor = '';\n\n                if ( typeof tinymce !== 'undefined' ) {\n                    taskEditor = tinymce.get('task_breakerTaskEditDescription');\n                }\n\n                $('#task_breakerTaskId').val(task.id).removeAttr(\"disabled\");\n\n                $('#task_breakerTaskEditTitle').val(task.title).removeAttr(\"disabled\");\n\n                if ( taskEditor )\n                {\n                    taskEditor.setContent( task.description );\n                } else\n                {\n                    $( '#task_breakerTaskEditDescription' ).val( task.description );\n                }\n\n                $(\"#task-user-assigned-edit\").val('');\n\n                if ( document.getElementById(\"task-user-assigned-edit\") ) {\n                    document.getElementById(\"task-user-assigned-edit\").options.length = 0;\n                }\n\n                $.each( task.assign_users_meta.members_stack, function( key, val ) {\n                    var option = document.createElement(\"option\");\n                        option.value = val.ID;\n                        option.text  = val.display_name;\n                        option.selected  = \"selected\";\n                        document.getElementById(\"task-user-assigned-edit\").appendChild( option );\n                });\n\n                __this.autoSuggestMembers( $(\"#task-user-assigned-edit\"), true, task );\n\n                $( \"#task_breaker-task-edit-select-id\" ).val( task.priority ).change().removeAttr(\"disabled\");\n\n            }\n\n            return;\n\n        });\n\n    },\n\n    renderTask: function( __callback ) {\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                template: this.template,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( httpResponse ) {\n                __callback( httpResponse );\n            }\n        });\n    },\n\n    render: function() {\n\n        var __this = this;\n        this.progress(true);\n\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                page: this.model.page,\n                search: this.search,\n                priority: this.model.priority,\n                template: 'render_tasks',\n                show_completed: this.model.show_completed,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( response ) {\n\n                __this.progress(false);\n\n                if (response.message == 'success') {\n                    if (response.task.stats) {\n                        // update model max_page and min_page\n                        ThriveProjectModel.max_page = response.task.stats.max_page;\n                        ThriveProjectModel.min_page = response.task.stats.min_page;\n                    }\n                    // render the result\n                    $('#task_breaker-project-tasks').html(response.html);\n                }\n\n                if ( 0 === response.task.length ) {\n                    $('#task_breaker-project-tasks').html('<div class=\"task-breaker-message danger\">No tasks found. Try different keywords and filters.</div>');\n                }\n\n            },\n            error: function() {\n\n            }\n        });\n    },\n\n    initialize: function() {\n\n    },\n\n    progress: function(isShow) {\n\n        var __display = 'none';\n        var __opacity = 1;\n\n        if ( isShow ) {\n            __display = 'block';\n            __opacity = 0.25;\n        }\n\n        $('#task_breaker-preloader').css({\n            display: __display\n        });\n\n        $('#task_breaker-project-tasks').css({\n            opacity: __opacity\n        });\n\n        return;\n    },\n\n    updateStats: function( stats ) {\n\n        var priority = null;\n        var task_status = null;\n\n        if ( stats.status ) {\n            priority = stats.status.priority;\n            task_status = stats.status.task_status;\n        }\n\n        if ( task_status ) {\n            $('#task-details-status').text( task_status ).removeClass(\"open close\").addClass( task_status.toLowerCase() );\n        }\n\n        if ( priority ) {\n            $('#task-details-priority').text( priority ).removeClass(\"normal high critical\").addClass( priority.toLowerCase() );\n        }\n\n        $( '.task_breaker-total-tasks' ).text( stats.total );\n        $( '.task_breaker-remaining-tasks-count' ).text( stats.remaining );\n        $( '.task-progress-completed' ).text( stats.completed );\n        $( '.task-progress-percentage-label > span' ).text( stats.progress );\n\n        // Update the progress bar css width.\n        $( '.task-progress-percentage' ).css({\n            width: Math.ceil( ( ( stats.completed / stats.total ) * 100 ) ) + '%'\n        });\n\n    },\n\n    autoSuggestMembers: function( selectElement, clearSelect, task ) {\n\n        if ( ! selectElement ) {\n            return;\n        }\n\n        var $resultTemplate = function( result ) {\n\n\t\t\tif ( result.avatar ) {\n\n\t\t\t    var $state = $('<span><img class=\"result-template-avatar\" src=\"'+result.avatar+'\" alt=\"s\" />'+result.text+'</span>');\n\t\t\t}\n\n\t\t\treturn $state;\n\t\t}\n\n\n\t\tselectElement.select2({\n\t\t\tmaximumInputLength: 20,\n\t\t\tplaceholder: \"Type member\\'s name...\",\n\t\t\tallowClear: true,\n\t\t\tminimumResultsForSearch: Infinity,\n\t\t\tminimumInputLength: 2,\n\t\t\ttag: true,\n\t\t\tajax: {\n\n\t\t\t\tdata: function ( params ) {\n\n\t\t\t\t\tvar query = {\n\t\t\t\t\t\taction: 'task_breaker_transactions_request',\n\t\t\t\t\t\tmethod: 'task_breaker_transactions_user_suggest',\n\t\t\t\t\t\tnonce: task_breakerProjectSettings.nonce,\n\t\t\t\t\t\tgroup_id: task_breakerProjectSettings.current_group_id,\n\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t\tuser_id_collection: 0\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( selectElement.val() ) {\n\t\t\t\t\t\tquery.user_id_collection = selectElement.val();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t\turl: task_breakerAjaxUrl,\n\t\t\t\tdelay: 250,\n\t\t\t\tcache: true\n\t\t\t},\n\t\t\ttemplateResult: $resultTemplate\n\t\t});\n    }\n});\n\nvar ThriveProjectView = new __ThriveProjectView();\n\nvar __ThriveProjectRoute = Backbone.Router.extend({\n\n    routes: {\n        \"tasks\": \"index\",\n        \"tasks/dashboard\": \"dashboard\",\n        \"tasks/settings\": \"settings\",\n        \"tasks/completed\": \"completed_tasks\",\n        \"tasks/add\": \"add\",\n        \"tasks/edit/:id\": \"edit\",\n        \"tasks/page/:page\": \"next\",\n        \"tasks/view/:id\": \"view_task\",\n        \"tasks/search/:search_keyword\": 'search',\n    },\n    view: ThriveProjectView,\n    model: ThriveProjectModel,\n    index: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n        this.model.page = 1;\n        this.model.id = 0;\n        this.model.show_completed = 'no';\n\n        this.view.search = '';\n        this.view.render();\n    },\n\n    dashboard: function() {\n        this.view.switchView(null, '#task_breaker-project-dashboard-context');\n    },\n    settings: function() {\n        this.view.switchView(null, '#task_breaker-project-settings-context');\n    },\n    add: function() {\n        this.view.switchView(null, '#task_breaker-project-add-new-context');\n\n        $('#task_breaker-project-add-new').css('display', 'block');\n        $('#task-user-assigned').val(\"\");\n        this.view.autoSuggestMembers( $(\"#task-user-assigned\"), true, null );\n\n        if ( tinymce.editors.task_breakerTaskDescription ) {\n            tinymce.editors.task_breakerTaskDescription.setContent('');\n        }\n    },\n    completed_tasks: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n\n        this.model.show_completed = 'yes';\n        this.view.render();\n    },\n    edit: function(task_id) {\n        this.view.showEditForm(task_id);\n        $('#task_breaker-edit-task-message').html('');\n    },\n    next: function(page) {\n        this.model.page = page;\n        this.view.render();\n    },\n    view_task: function(task_id) {\n        this.model.id = task_id;\n        this.view.single(task_id);\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n    },\n    search: function(keywords) {\n        this.model.page = 1;\n        this.model.id = 0;\n        this.view.search = keywords;\n        this.view.render();\n    }\n});\n\nvar ThriveProjectRoute = new __ThriveProjectRoute();\n\nThriveProjectRoute.on('route', function(route) {\n    if ('view_task' === route) {\n        this.view.hideFilters();\n    } else {\n        this.view.showFilters();\n    }\n});\n\nBackbone.history.start();\n\n$('#task_breaker-submit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n    var __taskEditor = tinymce.get( 'task_breakerTaskDescription' );\n\n    if ( __taskEditor ) {\n       taskDescription =  __taskEditor.getContent();\n    } else {\n       taskDescription = $( '#task_breakerTaskDescription' ).val();\n    }\n\n    $.ajax({\n        url: ajaxurl,\n        data: {\n\n            action: 'task_breaker_transactions_request',\n            method: 'task_breaker_transaction_add_ticket',\n\n            description: taskDescription,\n\n            title: $('#task_breakerTaskTitle').val(),\n            milestone_id: $('#task_breakerTaskMilestone').val(),\n            priority: $('select#task_breaker-task-priority-select').val(),\n\n            nonce: task_breakerProjectSettings.nonce,\n\n            project_id: task_breakerTaskConfig.currentProjectId,\n            user_id: task_breakerTaskConfig.currentUserId,\n            user_id_collection: $('select#task-user-assigned').val()\n        },\n\n        method: 'post',\n\n        success: function( message ) {\n\n            // Total tasks view.\n            var total_tasks = parseInt( $('.task_breaker-total-tasks').text().trim() );\n\n            // Remaining tasks view\n            var remaining_tasks = parseInt( $('.task_breaker-remaining-tasks-count').text().trim() );\n\n           // console.log( message );\n\n            if ( message.message === 'success' ) {\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n                $('#task_breakerTaskDescription').val('');\n\n                $('#task_breakerTaskTitle').val('');\n\n                ThriveProjectView.updateStats( message.stats );\n\n                location.href = \"#tasks/view/\" + message.response.id;\n\n\n            } else {\n\n                $('#task_breaker-add-task-message').html('<p class=\"error\">'+message.response+'</p>').show().addClass('error');\n\n\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n            }\n        },\n        error: function() {\n\n        }\n    }); // end $.ajax\n}); // end $('#task_breaker-submit-btn').click()\n\n// test\n$('#task-breaker-form-file-attachment-field').on('change', function( event ){\n\n    var files = event.target.files;\n    var data = new FormData();\n\n    \n    $.each( files, function(key, value) {\n        data.append(key, value);\n    });\n\n    data.append( 'action', 'task_breaker_transactions_request' );\n    data.append( 'method', 'task_breaker_transaction_task_file_attachment' );\n    data.append( 'nonce', task_breakerProjectSettings.nonce )\n\n    $.ajax({\n        url: task_breakerAjaxUrl,\n        type: 'POST',\n        data: data,\n        cache: false,\n        dataType: 'json',\n        processData: false, // Don't process the files\n        contentType: false, // Set content type to false as jQuery will tell the server its a query string request\n        success: function( response, textStatus, jqXHR )\n        {\n            if( typeof response.error === 'undefined' )\n            {\n                // Success so call function to process the form\n                console.log('sucessfully sent the data..');\n                console.log('here is the response');\n                console.log( response );\n            }\n            else\n            {\n                // Handle errors here\n                console.log('ERRORS: ' + response.error);\n            }\n        },\n        error: function(jqXHR, textStatus, errorThrown)\n        {\n            // Handle errors here\n            console.log('ERRORS: ' + textStatus);\n            // STOP LOADING SPINNER\n        },\n        xhr: function(){\n            var myXhr = $.ajaxSettings.xhr();\n            var progress = 0;\n            if ( myXhr.upload ) {\n                // For handling the progress of the upload\n                myXhr.upload.addEventListener('progress', function(e) {\n\n                    if ( e.lengthComputable ) {\n                        $('progress').attr({\n                            value: e.loaded,\n                            max: e.total,\n                        });\n                        progress = ( e.loaded / e.total ) * 100;\n                        $('#tb-file-attachment-progress').html( progress + '%' );\n                    }\n                } , false );\n\n            }\n            return myXhr;\n        },\n        complete: function() {\n            console.log('request complete... stopping the spinner...');\n        }\n    });\n\n    \n\n});\n\n$('#task_breaker-edit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n\n    var taskDescriptionObject = tinymce.get( 'task_breakerTaskEditDescription' );\n\n    if ( taskDescriptionObject ) {\n\n        taskDescription = taskDescriptionObject.getContent();\n\n    } else {\n\n        taskDescription = $('#task_breakerTaskEditDescription').val();\n        \n    }\n\n    var httpRequestParameters = {\n        description: taskDescription,\n        nonce: task_breakerProjectSettings.nonce,\n        project_id: task_breakerTaskConfig.currentProjectId,\n        user_id: task_breakerTaskConfig.currentUserId,\n\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_edit_ticket',\n\n        title: $('#task_breakerTaskEditTitle').val(),\n        milestone_id: $('#task_breakerTaskMilestone').val(),\n        id: $('#task_breakerTaskId').val(),\n        priority: $('select[name=\"task_breaker-task-edit-priority\"]').val(),\n        user_id_collection: $('select#task-user-assigned-edit').val()\n    }\n\n    $.ajax({\n\n        url: ajaxurl,\n        data: httpRequestParameters,\n\n        method: 'post',\n\n        success: function( response ) {\n\n            var message = \"<p class='task-breaker-message success'>Task successfully updated <a href='#tasks/view/\" + response.id + \"'>&#65515; View</a></p>\";\n\n            if ( 'fail' === response.message && 'no_changes' !== response.type ) {\n\n                message = \"<p class='task-breaker-message danger'>There was an error updating the task. All fields are required.</a></p>\";\n\n            }\n\n            if ( 'fail' === response.message && 'unauthorized' === response.type ) {\n\n                message = \"<p class='task-breaker-message danger'>You are not allowed to modify this task. Only group project administrators and group projects moderators are allowed.</a></p>\";\n\n            }\n\n            $('#task_breaker-edit-task-message').html( message ).show();\n\n            element.attr('disabled', false);\n\n            element.text('Update Task');\n\n            return;\n\n        },\n\n        error: function() {\n\n            // Todo: Better handling of http errors and timeouts.\n            console.log('An Error Occured [task_breaker.js]#311');\n\n            return;\n        }\n    });\n}); // end $('#task_breaker-edit-btn').click()\n\n // Delete Task Single\n $('body').on('click', '#task_breaker-delete-btn', function() {\n\n    var _delete_confirm = confirm(\"Are you sure you want to delete this task? This action is irreversible\");\n\n    if (!_delete_confirm) {\n       return;\n    }\n\n    var $element = $(this);\n\n    var task_id = parseInt( ThriveProjectModel.id );\n\n    var task_project_id = parseInt( ThriveProjectModel.project_id );\n\n    var __http_params = {\n\n       action: 'task_breaker_transactions_request',\n       method: 'task_breaker_transaction_delete_ticket',\n       id: task_id,\n       project_id: task_project_id,\n       nonce: task_breakerProjectSettings.nonce\n\n   };\n\n   ThriveProjectView.progress(true);\n\n   $element.text('Deleting ...');\n\n   $.ajax({\n\n       url: ajaxurl,\n       data: __http_params,\n       method: 'post',\n       success: function( response ) {\n\n            ThriveProjectView.progress( false );\n\n            ThriveProjectView.updateStats( response.stats );\n\n            if ( 'fail' === response.message) {\n\n                var message = \"<p class='task-breaker-message danger'>\"+response.message_text+\"</p>\";\n                \n                $('#task_breaker-edit-task-message').html( message ).show();\n\n                return false;\n\n            } else {\n\n                location.href = \"#tasks\";\n\n                ThriveProjectView.switchView(null, '#task_breaker-project-tasks-context');\n                \n            }\n\n            $element.text('Delete');\n\n       },\n\n       error: function() {\n\n           ThriveProjectView.progress(false);\n\n           $element.text('Delete');\n\n       }\n   });\n }); // End Delete Task\n\n  $('body').on('click', '#updateTaskBtn', function() {\n\n      var updateTaskBtn = $(this);\n\n      updateTaskBtn.attr('disabled', 'disabled');\n\n      var comment_ticket_id = ThriveProjectModel.id,\n          comment_details = $('#task-comment-content').val(),\n          task_priority = $('#task_breaker-task-priority-update-select').val(),\n          comment_completed = $('input[name=task_commment_completed]:checked').val(),\n          task_project_id = parseInt( ThriveProjectModel.project_id );\n\n      if (0 === comment_ticket_id) {\n          return;\n      }\n\n      // notify the user when submitting the comment form\n      ThriveProjectView.progress(true);\n\n      var __http_params = {\n          action: 'task_breaker_transactions_request',\n          method: 'task_breaker_transaction_add_comment_to_ticket',\n          ticket_id: comment_ticket_id,\n          priority: task_priority,\n          details: comment_details,\n          completed: comment_completed,\n          project_id: task_project_id,\n          nonce: task_breakerProjectSettings.nonce\n      };\n\n      $.ajax({\n          url: ajaxurl,\n          data: __http_params,\n          method: 'post',\n          success: function( response ) {\n\n              updateTaskBtn.attr('disabled', false);\n              ThriveProjectView.progress( false );\n\n              $('#task-comment-content').val('');\n              $('#task-lists').append(response.result);\n\n\n              if (\"yes\" === comment_completed) {\n\n                  // disable old radios\n                  $('#ticketStatusInProgress').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusComplete').attr('disabled', true).attr('checked', false);\n                  $('#comment-completed-radio').addClass('hide');\n                  // enable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', false);\n                  $('#task_breaker-comment-completed-radio').removeClass('hide');\n\n              }\n\n              if ( \"reopen\" === comment_completed ) {\n\n                  // Enable old radios\n                  $('#ticketStatusInProgress').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusComplete').attr('disabled', false).attr('checked', false);\n                  $('#comment-completed-radio').removeClass('hide');\n                  // Disable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', true);\n                  $('#task_breaker-comment-completed-radio').addClass('hide');\n\n              }\n              // console.log(response.stats);\n              ThriveProjectView.updateStats( response.stats );\n          },\n          error: function() {\n              updateTaskBtn.attr('disabled', false);\n              ThriveProjectView.progress(false);\n          }\n      });\n  }); // end UpdateTask\n\n// Delete Comment Event.\n$('body').on('click', 'a.task_breaker-delete-comment', function(e) {\n\n    e.preventDefault();\n\n    // Ask the user to confirm if he/she really wanted to delete the task comment.\n    var confirm_delete = confirm(\"Are you sure you want to delete this comment? This action is irreversible. \");\n\n    // Exit if the user decided to cancel the task comment.\n    if (!confirm_delete) {\n        return false;\n    }\n\n    var $element = $(this);\n\n    var comment_ticket = parseInt($(this).attr('data-comment-id'));\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_delete_comment',\n        comment_id: comment_ticket,\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    // Send request to server to delete the comment.\n    ThriveProjectView.progress(true);\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            if (response.message == 'success') {\n\n                $element.parent().parent().parent().parent().fadeOut(function() {\n                    $(this).remove();\n                });\n\n            } else {\n\n                this.error();\n\n            }\n        },\n        error: function() {\n            ThriveProjectView.progress(false);\n            $element.parent().append('<p class=\"error\">Transaction Error: There was an error trying to delete this comment.</p>');\n        }\n    });\n}); // end Delete Comment\n\n/**\n * Add new project script\n *\n * @Todo: Current handle for adding project is inside archive.js\n */\n\n// Update Project\n$('body').on('click', '#task_breakerUpdateProjectBtn', function() {\n\n    var element = $(this);\n\n    var projectContent = \"\";\n\n    var __projectContentObj = tinymce.get( 'task_breakerProjectContent' );\n\n        if ( __projectContentObj ) {\n\n            projectContent = __projectContentObj.getContent();\n\n        } else {\n\n            projectContent = $('#task_breakerProjectContent').val();\n\n        }\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transactions_update_project',\n        id: parseInt( $('#task_breaker-project-id').val() ),\n        title: $( '#task_breaker-project-name' ).val(),\n        content: projectContent,\n        group_id: parseInt( $('select[name=task_breaker-project-assigned-group]').val() ),\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    element.attr('disabled', true).text('Updating ...');\n\n    ThriveProjectView.progress(true);\n\n    $('.task_breaker-project-updated').remove();\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            element.attr('disabled', false).text('Update Project');\n\n            if (response.message === 'success') {\n\n                // Update the project title.\n                $('article .entry-header > .entry-title').text($('#task_breaker-project-name').val());\n\n                element.parent().parent().prepend(\n                    '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                    '<p>Project details successfully updated.</p>' +\n                    '</div>'\n                );\n\n                location.reload();\n\n            } else {\n\n                if (\"authentication_error\" === response.type ) {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated error updated\">' +\n                        '<p>Only group administrators and moderators can update the project settings.</p>' +\n                        '</div>'\n                    );\n\n                } else {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                        '<p>There was an error saving the project. All fields are required.</p>' +\n                        '</div>'\n                    );\n\n                }\n\n            }\n\n            ThriveProjectView.progress(false);\n\n            setTimeout(function() {\n\n                $('.task_breaker-project-updated').fadeOut();\n\n            }, 3000);\n\n            return;\n\n        },\n\n        error: function() {\n\n            alert('connection failure');\n            return;\n\n        }\n    });\n}); // Project Update End.\n\n $('body').on('click', '#task_breakerDeleteProjectBtn', function() {\n\n\n     if ( !confirm('Are you sure you want to delete this project? All the tickets under this project will be deleted as well. This action cannot be undone.')) {\n         return;\n     }\n\n     var project_id = $('#task_breaker-project-id').val();\n\n     var __http_params = {\n         action: 'task_breaker_transactions_request',\n         method: 'task_breaker_transactions_delete_project',\n         id: project_id,\n         nonce: task_breakerProjectSettings.nonce\n     };\n\n     $(this).text('Deleting...');\n\n     $.ajax({\n\n         url: ajaxurl,\n\n         method: 'post',\n\n         data: __http_params,\n\n         success: function( response ) {\n\n             if (response.message == 'success') {\n\n                 window.location = response.redirect;\n\n             } else {\n\n                this.error();\n\n             }\n\n             return;\n\n         },\n\n         error: function() {\n\n            alert('There was an error trying to delete this post. Try again later.');\n\n         }\n     });\n\n });\n\n}); // end $(window).load();\n}); // end jQuery(document).ready();\n"]}