{"version":3,"sources":["task-breaker.dev.js"],"names":["jQuery","document","ready","$","window","load","__ThriveProjectModel","Backbone","View","extend","id","project_id","task_breakerProjectSettings","page","priority","current_page","max_page","min_page","total","show_completed","total_pages","ThriveProjectModel","__ThriveProjectView","el","model","search","template","events","click .task_breaker-project-tab-li-item-a","click .next-page","click .prev-page","click #task_breaker-task-search-submit","change #task_breaker-task-filter-select","switchView","e","elementID","css","removeClass","$active_content","$element","currentTarget","attr","parent","addClass","hideFilters","hide","showFilters","show","searchTasks","keywords","val","length","location","href","encodeURI","filter","this","value","currentRoute","history","getFragment","render","next","preventDefault","currPage","prev","single","ticket_id","progress","__this","renderTask","response","message","html","message_long","showEditForm","task_id","__taskEditor","tinymce","get","setContent","task","taskEditor","removeAttr","title","description","each","assign_users_meta","members_stack","key","option","createElement","ID","text","display_name","selected","getElementById","appendChild","autoSuggestMembers","change","__callback","ajax","url","ajaxurl","method","dataType","data","action","nonce","success","httpResponse","stats","error","initialize","isShow","__display","__opacity","display","opacity","updateStats","task_status","status","toLowerCase","remaining","completed","width","Math","ceil","selectElement","clearSelect","$resultTemplate","result","avatar","$state","select2","maximumInputLength","placeholder","allowClear","minimumResultsForSearch","Infinity","minimumInputLength","tag","params","query","group_id","current_group_id","term","user_id_collection","task_breakerAjaxUrl","delay","cache","templateResult","ThriveProjectView","__ThriveProjectRoute","Router","routes","tasks","tasks/dashboard","tasks/settings","tasks/completed","tasks/add","tasks/edit/:id","tasks/page/:page","tasks/view/:id","tasks/search/:search_keyword","view","index","dashboard","settings","add","editors","task_breakerTaskDescription","completed_tasks","edit","view_task","ThriveProjectRoute","on","route","start","click","element","taskDescription","getContent","milestone_id","task_breakerTaskConfig","currentProjectId","user_id","currentUserId","parseInt","trim","taskDescriptionObject","httpRequestParameters","console","log","type","_delete_confirm","confirm","task_project_id","__http_params","comment_ticket_id","comment_details","task_priority","comment_completed","details","append","confirm_delete","comment_ticket","comment_id","fadeOut","remove","projectContent","__projectContentObj","content","prepend","reload","setTimeout","alert","redirect"],"mappings":"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","file":"task-breaker.min.js","sourcesContent":["jQuery(document).ready(function($) {\n\t'use strict'\n\t$(window).load( function() {  \n\nvar __ThriveProjectModel = Backbone.View.extend({\n    id: 0,\n    project_id: task_breakerProjectSettings.project_id,\n    page: 1,\n    priority: -1,\n    current_page: 1,\n    max_page: 1,\n    min_page: 1,\n    total: 0,\n    show_completed: 'no',\n    total_pages: 0,\n});\n\nvar ThriveProjectModel = new __ThriveProjectModel();\n\nvar __ThriveProjectView = Backbone.View.extend({\n\n    el: 'body',\n    model: ThriveProjectModel,\n    search: '',\n    template: '',\n    events: {\n        \"click .task_breaker-project-tab-li-item-a\": \"switchView\",\n        \"click .next-page\": \"next\",\n        \"click .prev-page\": \"prev\",\n        \"click #task_breaker-task-search-submit\": \"searchTasks\",\n        \"change #task_breaker-task-filter-select\": \"filter\"\n    },\n\n    switchView: function(e, elementID) {\n\n        $('#task_breaker-project-edit-tab').css('display', 'none');\n        $('#task_breaker-project-add-new').css('display', 'none');\n\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n\n        var $active_content = \"\";\n\n        if (e) {\n\n            var $element = $(e.currentTarget);\n\n            $active_content = $element.attr('data-content');\n\n            // Activate selected tab.\n            $element.parent().addClass('active');\n\n            $('div[data-content=' + $active_content + ']').addClass('active');\n\n        } else {\n\n            $(elementID).addClass('active');\n\n            $active_content = $(elementID).attr('data-content');\n\n            $('a[data-content=' + $active_content + ']').parent().addClass('active');\n        }\n    },\n\n    hideFilters: function() {\n        $('#task_breaker-tasks-filter').hide();\n    },\n\n    showFilters: function() {\n        $('#task_breaker-tasks-filter').show();\n    },\n\n    searchTasks: function() {\n\n        var keywords = $('#task_breaker-task-search-field').val();\n\n        if ( 0 === keywords.length ) {\n            location.href = '#tasks';\n        } else {\n            location.href = '#tasks/search/' + encodeURI(keywords);\n        }\n\n    },\n\n    filter: function(e) {\n        this.model.priority = e.currentTarget.value;\n\n        var currentRoute = Backbone.history.getFragment();\n\n        if (currentRoute != 'tasks') {\n            location.href = '#tasks';\n        } else {\n            this.render();\n        }\n    },\n\n    next: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage < this.model.max_page) {\n            this.model.page = ++currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    prev: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage > this.model.min_page) {\n            this.model.page = --currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    single: function(ticket_id) {\n        this.progress(true);\n        var __this = this;\n        this.template = 'task_breaker_ticket_single';\n        // load the task\n        this.renderTask(function( response ) {\n\n            __this.progress( false );\n\n            if ( response.message == 'fail' ) {\n                $('#task_breaker-project-tasks').html(\"<p class='info' id='message'>\"+response.message_long+\"</p>\");\n            }\n\n            if ( response.html ) {\n                $('#task_breaker-project-tasks').html(response.html);\n            }\n        });\n    },\n\n    showEditForm: function(task_id) {\n\n        this.progress(true);\n        var __this = this;\n\n        var __taskEditor = tinymce.get('task_breakerTaskEditDescription');\n\n        if ( __taskEditor ) {\n            __taskEditor.setContent( '' );\n        } else {\n            $( '#task_breakerTaskEditDescription' ).val( '' );\n        }\n\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('a#task_breaker-project-edit-tab').css('display', 'block').parent().addClass('active');\n        $('#task_breaker-project-edit-context').addClass('active');\n\n        $('#task_breakerTaskId').attr('disabled', true).val('loading...');\n        $('#task_breakerTaskEditTitle').attr('disabled', true).val('loading...');\n        $(\"#task_breaker-task-edit-select-id\").attr('disabled', true);\n\n        this.model.id = task_id;\n\n        // Render the task.\n        this.renderTask( function( response ) {\n\n            __this.progress( false );\n\n            if ( response.task ) {\n\n                var task = response.task;\n\n                var taskEditor = tinymce.get('task_breakerTaskEditDescription');\n\n                $('#task_breakerTaskId').val(task.id).removeAttr(\"disabled\");\n\n                $('#task_breakerTaskEditTitle').val(task.title).removeAttr(\"disabled\");\n\n                if ( taskEditor ) {\n                    taskEditor.setContent( task.description );\n                } else {\n                    $( '#task_breakerTaskEditDescription' ).val( task.description );\n                }\n\n                $(\"#task-user-assigned-edit\").val('');\n\n                $.each( task.assign_users_meta.members_stack, function( key, val ) {\n                    var option = document.createElement(\"option\");\n                        option.value = val.ID;\n                        option.text  = val.display_name;\n                        option.selected  = \"selected\";\n                        document.getElementById(\"task-user-assigned-edit\").appendChild( option );\n                });\n\n                __this.autoSuggestMembers( $(\"#task-user-assigned-edit\"), true, task );\n\n                $( \"#task_breaker-task-edit-select-id\" ).val( task.priority ).change().removeAttr(\"disabled\");\n\n            }\n\n            return;\n\n        });\n\n    },\n\n    renderTask: function( __callback ) {\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                template: this.template,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( httpResponse ) {\n                __callback( httpResponse );\n            }\n        });\n    },\n\n    render: function() {\n\n        var __this = this;\n        this.progress(true);\n\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                page: this.model.page,\n                search: this.search,\n                priority: this.model.priority,\n                template: 'task_breaker_the_tasks',\n                show_completed: this.model.show_completed,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( response ) {\n\n                __this.progress(false);\n\n                if (response.message == 'success') {\n                    if (response.task.stats) {\n                        // update model max_page and min_page\n                        ThriveProjectModel.max_page = response.task.stats.max_page;\n                        ThriveProjectModel.min_page = response.task.stats.min_page;\n                    }\n                    // render the result\n                    $('#task_breaker-project-tasks').html(response.html);\n                }\n\n                if (0 === response.task.length) {\n                    $('#task_breaker-project-tasks').html('<div class=\"error\" id=\"message\"><p>No tasks found. If you\\'re trying to find a task, kindly try different keywords and/or filters.</p></div>');\n                }\n\n            },\n            error: function() {\n\n            }\n        });\n    },\n\n    initialize: function() {\n\n    },\n\n    progress: function(isShow) {\n\n        var __display = 'none';\n        var __opacity = 1;\n\n        if ( isShow ) {\n            __display = 'block';\n            __opacity = 0.25;\n        }\n\n        $('#task_breaker-preloader').css({\n            display: __display\n        });\n\n        $('#task_breaker-project-tasks').css({\n            opacity: __opacity\n        });\n\n        return;\n    },\n\n    updateStats: function( stats ) {\n\n        var priority = null;\n        var task_status = null;\n\n        if ( stats.status ) {\n            priority = stats.status.priority;\n            task_status = stats.status.task_status;\n        }\n\n        if ( task_status ) {\n            $('#task-details-status').text( task_status ).removeClass(\"open close\").addClass( task_status.toLowerCase() );\n        }\n\n        if ( priority ) {\n            $('#task-details-priority').text( priority ).removeClass(\"normal high critical\").addClass( priority.toLowerCase() );\n        }\n\n        $( '.task_breaker-total-tasks' ).text( stats.total );\n        $( '.task_breaker-remaining-tasks-count' ).text( stats.remaining );\n        $( '.task-progress-completed' ).text( stats.completed );\n        $( '.task-progress-percentage-label > span' ).text( stats.progress );\n\n        // Update the progress bar css width.\n        $( '.task-progress-percentage' ).css({\n            width: Math.ceil( ( ( stats.completed / stats.total ) * 100 ) ) + '%'\n        });\n\n    },\n\n    autoSuggestMembers: function( selectElement, clearSelect, task ) {\n\n        if ( ! selectElement ) {\n            return;\n        }\n\n        var $resultTemplate = function( result ) {\n\n\t\t\tif ( result.avatar ) {\n\n\t\t\t    var $state = $('<span><img class=\"result-template-avatar\" src=\"'+result.avatar+'\" alt=\"s\" />'+result.text+'</span>');\n\t\t\t}\n\n\t\t\treturn $state;\n\t\t}\n\n\n\t\tselectElement.select2({\n\t\t\tmaximumInputLength: 20,\n\t\t\tplaceholder: \"Type member\\'s name...\",\n\t\t\tallowClear: true,\n\t\t\tminimumResultsForSearch: Infinity,\n\t\t\tminimumInputLength: 2,\n\t\t\ttag: true,\n\t\t\tajax: {\n\n\t\t\t\tdata: function ( params ) {\n\n\t\t\t\t\tvar query = {\n\t\t\t\t\t\taction: 'task_breaker_transactions_request',\n\t\t\t\t\t\tmethod: 'task_breaker_transactions_user_suggest',\n\t\t\t\t\t\tnonce: task_breakerProjectSettings.nonce,\n\t\t\t\t\t\tgroup_id: task_breakerProjectSettings.current_group_id,\n\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t\tuser_id_collection: 0\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( selectElement.val() ) {\n\t\t\t\t\t\tquery.user_id_collection = selectElement.val();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t\turl: task_breakerAjaxUrl,\n\t\t\t\tdelay: 150,\n\t\t\t\tcache: true\n\t\t\t},\n\t\t\ttemplateResult: $resultTemplate\n\t\t});\n    }\n});\n\nvar ThriveProjectView = new __ThriveProjectView();\n\nvar __ThriveProjectRoute = Backbone.Router.extend({\n\n    routes: {\n        \"tasks\": \"index\",\n        \"tasks/dashboard\": \"dashboard\",\n        \"tasks/settings\": \"settings\",\n        \"tasks/completed\": \"completed_tasks\",\n        \"tasks/add\": \"add\",\n        \"tasks/edit/:id\": \"edit\",\n        \"tasks/page/:page\": \"next\",\n        \"tasks/view/:id\": \"view_task\",\n        \"tasks/search/:search_keyword\": 'search',\n    },\n    view: ThriveProjectView,\n    model: ThriveProjectModel,\n    index: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n        this.model.page = 1;\n        this.model.id = 0;\n        this.model.show_completed = 'no';\n\n        this.view.search = '';\n        this.view.render();\n    },\n\n    dashboard: function() {\n        this.view.switchView(null, '#task_breaker-project-dashboard-context');\n    },\n    settings: function() {\n        this.view.switchView(null, '#task_breaker-project-settings-context');\n    },\n    add: function() {\n        this.view.switchView(null, '#task_breaker-project-add-new-context');\n\n        $('#task_breaker-project-add-new').css('display', 'block');\n        $('#task-user-assigned').val(\"\");\n        this.view.autoSuggestMembers( $(\"#task-user-assigned\"), true, null );\n\n        if ( tinymce.editors.task_breakerTaskDescription ) {\n            tinymce.editors.task_breakerTaskDescription.setContent('');\n        }\n    },\n    completed_tasks: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n\n        this.model.show_completed = 'yes';\n        this.view.render();\n    },\n    edit: function(task_id) {\n        this.view.showEditForm(task_id);\n        $('#task_breaker-edit-task-message').html('');\n    },\n    next: function(page) {\n        this.model.page = page;\n        this.view.render();\n    },\n    view_task: function(task_id) {\n        this.model.id = task_id;\n        this.view.single(task_id);\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n    },\n    search: function(keywords) {\n        this.model.page = 1;\n        this.model.id = 0;\n        this.view.search = keywords;\n        this.view.render();\n    }\n});\n\nvar ThriveProjectRoute = new __ThriveProjectRoute();\n\nThriveProjectRoute.on('route', function(route) {\n    if ('view_task' === route) {\n        this.view.hideFilters();\n    } else {\n        this.view.showFilters();\n    }\n});\n\nBackbone.history.start();\n\n$('#task_breaker-submit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n    var __taskEditor = tinymce.get( 'task_breakerTaskDescription' );\n\n    if ( __taskEditor ) {\n       taskDescription =  __taskEditor.getContent();\n    } else {\n       taskDescription = $( '#task_breakerTaskDescription' ).val();\n    }\n\n    $.ajax({\n        url: ajaxurl,\n        data: {\n\n            action: 'task_breaker_transactions_request',\n            method: 'task_breaker_transaction_add_ticket',\n\n            description: taskDescription,\n\n            title: $('#task_breakerTaskTitle').val(),\n            milestone_id: $('#task_breakerTaskMilestone').val(),\n            priority: $('select#task_breaker-task-priority-select').val(),\n\n            nonce: task_breakerProjectSettings.nonce,\n\n            project_id: task_breakerTaskConfig.currentProjectId,\n            user_id: task_breakerTaskConfig.currentUserId,\n            user_id_collection: $('select#task-user-assigned').val()\n        },\n\n        method: 'post',\n\n        success: function( message ) {\n\n            // Total tasks view.\n            var total_tasks = parseInt( $('.task_breaker-total-tasks').text().trim() );\n\n            // Remaining tasks view\n            var remaining_tasks = parseInt( $('.task_breaker-remaining-tasks-count').text().trim() );\n\n           // console.log( message );\n\n            if ( message.message === 'success' ) {\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n                $('#task_breakerTaskDescription').val('');\n\n                $('#task_breakerTaskTitle').val('');\n\n                ThriveProjectView.updateStats( message.stats );\n\n                location.href = \"#tasks/view/\" + message.response.id;\n\n\n            } else {\n\n                $('#task_breaker-add-task-message').html('<p class=\"error\">'+message.response+'</p>').show().addClass('error');\n\n\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n            }\n        },\n        error: function() {\n\n        }\n    }); // end $.ajax\n}); // end $('#task_breaker-submit-btn').click()\n\n$('#task_breaker-edit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n    var taskDescriptionObject = tinymce.get( 'task_breakerTaskEditDescription' );\n\n    if ( taskDescriptionObject ) {\n        taskDescription = taskDescriptionObject.getContent();\n    } else {\n        taskDescription = $('#task_breakerTaskEditDescription').val();\n    }\n\n    var httpRequestParameters = {\n        description: taskDescription,\n        nonce: task_breakerProjectSettings.nonce,\n        project_id: task_breakerTaskConfig.currentProjectId,\n        user_id: task_breakerTaskConfig.currentUserId,\n\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_edit_ticket',\n\n        title: $('#task_breakerTaskEditTitle').val(),\n        milestone_id: $('#task_breakerTaskMilestone').val(),\n        id: $('#task_breakerTaskId').val(),\n        priority: $('select[name=\"task_breaker-task-edit-priority\"]').val(),\n        user_id_collection: $('select#task-user-assigned-edit').val()\n    }\n\n    console.log( httpRequestParameters );\n\n    $.ajax({\n\n        url: ajaxurl,\n        data: httpRequestParameters,\n\n        method: 'post',\n\n        success: function( response ) {\n\n            var message = \"<p class='success'>Task successfully updated <a href='#tasks/view/\" + response.id + \"'>&#65515; View</a></p>\";\n\n            if ('fail' === response.message && 'no_changes' !== response.type) {\n\n                message = \"<p class='error'>There was an error updating the task. All fields are required.</a></p>\";\n\n            }\n\n            $('#task_breaker-edit-task-message').html(message).show();\n\n            element.attr('disabled', false);\n\n            element.text('Update Task');\n\n            return;\n\n        },\n\n        error: function() {\n\n            // Todo: Better handling of http errors and timeouts.\n            console.log('An Error Occured [task_breaker.js]#311');\n\n            return;\n        }\n    });\n}); // end $('#task_breaker-edit-btn').click()\n\n // Delete Task Single\n $('body').on('click', '#task_breaker-delete-btn', function() {\n\n    var _delete_confirm = confirm(\"Are you sure you want to delete this task? This action is irreversible\");\n\n    if (!_delete_confirm) {\n       return;\n    }\n\n    var $element = $(this);\n\n    var task_id = parseInt( ThriveProjectModel.id );\n\n    var task_project_id = parseInt( ThriveProjectModel.project_id );\n\n    var __http_params = {\n\n       action: 'task_breaker_transactions_request',\n       method: 'task_breaker_transaction_delete_ticket',\n       id: task_id,\n       project_id: task_project_id,\n       nonce: task_breakerProjectSettings.nonce\n\n   };\n\n   ThriveProjectView.progress(true);\n\n   $element.text('Deleting ...');\n\n   $.ajax({\n\n       url: ajaxurl,\n       data: __http_params,\n       method: 'post',\n       success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            ThriveProjectView.updateStats( response.stats );\n\n            location.href = \"#tasks\";\n\n            ThriveProjectView.switchView(null, '#task_breaker-project-tasks-context');\n\n            $element.text('Delete');\n\n       },\n\n       error: function() {\n           ThriveProjectView.progress(false);\n           location.href = \"#tasks\";\n           ThriveProjectView.switchView(null, '#task_breaker-project-tasks-context');\n           $element.text('Delete');\n\n       }\n   });\n }); // End Delete Task\n\n  $('body').on('click', '#updateTaskBtn', function() {\n\n      var comment_ticket_id = ThriveProjectModel.id,\n          comment_details = $('#task-comment-content').val(),\n          task_priority = $('#task_breaker-task-priority-update-select').val(),\n          comment_completed = $('input[name=task_commment_completed]:checked').val(),\n          task_project_id = parseInt( ThriveProjectModel.project_id );\n\n      if (0 === comment_ticket_id) {\n          return;\n      }\n\n      // notify the user when submitting the comment form\n      ThriveProjectView.progress(true);\n\n      var __http_params = {\n          action: 'task_breaker_transactions_request',\n          method: 'task_breaker_transaction_add_comment_to_ticket',\n          ticket_id: comment_ticket_id,\n          priority: task_priority,\n          details: comment_details,\n          completed: comment_completed,\n          project_id: task_project_id,\n          nonce: task_breakerProjectSettings.nonce\n      };\n\n      $.ajax({\n          url: ajaxurl,\n          data: __http_params,\n          method: 'post',\n          success: function( response ) {\n\n              ThriveProjectView.progress( false );\n\n              $('#task-comment-content').val('');\n              $('#task-lists').append(response.result);\n\n\n              if (\"yes\" === comment_completed) {\n\n                  // disable old radios\n                  $('#ticketStatusInProgress').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusComplete').attr('disabled', true).attr('checked', false);\n                  $('#comment-completed-radio').addClass('hide');\n                  // enable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', false);\n                  $('#task_breaker-comment-completed-radio').removeClass('hide');\n\n              }\n\n              if ( \"reopen\" === comment_completed ) {\n\n                  // Enable old radios\n                  $('#ticketStatusInProgress').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusComplete').attr('disabled', false).attr('checked', false);\n                  $('#comment-completed-radio').removeClass('hide');\n                  // Disable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', true);\n                  $('#task_breaker-comment-completed-radio').addClass('hide');\n\n              }\n              // console.log(response.stats);\n              ThriveProjectView.updateStats( response.stats );\n          },\n          error: function() {\n\n              ThriveProjectView.progress(false);\n          }\n      });\n  }); // end UpdateTask\n\n// Delete Comment Event.\n$('body').on('click', 'a.task_breaker-delete-comment', function(e) {\n\n    e.preventDefault();\n\n    // Ask the user to confirm if he/she really wanted to delete the task comment.\n    var confirm_delete = confirm(\"Are you sure you want to delete this comment? This action is irreversible. \");\n\n    // Exit if the user decided to cancel the task comment.\n    if (!confirm_delete) {\n        return false;\n    }\n\n    var $element = $(this);\n\n    var comment_ticket = parseInt($(this).attr('data-comment-id'));\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_delete_comment',\n        comment_id: comment_ticket,\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    // Send request to server to delete the comment.\n    ThriveProjectView.progress(true);\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            if (response.message == 'success') {\n\n                $element.parent().parent().parent().parent().fadeOut(function() {\n                    $(this).remove();\n                });\n\n            } else {\n\n                this.error();\n\n            }\n        },\n        error: function() {\n            ThriveProjectView.progress(false);\n            $element.parent().append('<p class=\"error\">Transaction Error: There was an error trying to delete this comment.</p>');\n        }\n    });\n}); // end Delete Comment\n\n/**\n * Add new project script\n *\n * @Todo: Current handle for adding project is inside archive.js\n */\n\n// Update Project\n$('body').on('click', '#task_breakerUpdateProjectBtn', function() {\n\n    var element = $(this);\n\n    var projectContent = \"\";\n\n    var __projectContentObj = tinymce.get( 'task_breakerProjectContent' );\n\n        if ( __projectContentObj ) {\n\n            projectContent = __projectContentObj.getContent();\n\n        } else {\n\n            projectContent = $('#task_breakerProjectContent').val();\n\n        }\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transactions_update_project',\n        id: parseInt( $('#task_breaker-project-id').val() ),\n        title: $( '#task_breaker-project-name' ).val(),\n        content: projectContent,\n        group_id: parseInt( $('select[name=task_breaker-project-assigned-group]').val() ),\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    element.attr('disabled', true).text('Updating ...');\n\n    ThriveProjectView.progress(true);\n\n    $('.task_breaker-project-updated').remove();\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            element.attr('disabled', false).text('Update Project');\n\n            if (response.message === 'success') {\n\n                // Update the project title.\n                $('article .entry-header > .entry-title').text($('#task_breaker-project-name').val());\n\n                element.parent().parent().prepend(\n                    '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                    '<p>Project details successfully updated.</p>' +\n                    '</div>'\n                );\n\n                location.reload();\n\n            } else {\n\n                if (\"authentication_error\" === response.type ) {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated error updated\">' +\n                        '<p>Only group administrators and moderators can update the project settings.</p>' +\n                        '</div>'\n                    );\n\n                } else {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                        '<p>There was an error saving the project. All fields are required.</p>' +\n                        '</div>'\n                    );\n\n                }\n\n            }\n\n            ThriveProjectView.progress(false);\n\n            setTimeout(function() {\n\n                $('.task_breaker-project-updated').fadeOut();\n\n            }, 3000);\n\n            return;\n\n        },\n\n        error: function() {\n\n            alert('connection failure');\n            return;\n\n        }\n    });\n}); // Project Update End.\n\n $('body').on('click', '#task_breakerDeleteProjectBtn', function() {\n\n\n     if ( !confirm('Are you sure you want to delete this project? All the tickets under this project will be deleted as well. This action cannot be undone.')) {\n         return;\n     }\n\n     var project_id = $('#task_breaker-project-id').val();\n\n     var __http_params = {\n         action: 'task_breaker_transactions_request',\n         method: 'task_breaker_transactions_delete_project',\n         id: project_id,\n         nonce: task_breakerProjectSettings.nonce\n     };\n\n     $(this).text('Deleting...');\n\n     $.ajax({\n\n         url: ajaxurl,\n\n         method: 'post',\n\n         data: __http_params,\n\n         success: function( response ) {\n\n             if (response.message == 'success') {\n\n                 window.location = response.redirect;\n\n             } else {\n\n                this.error();\n\n             }\n\n             return;\n\n         },\n\n         error: function() {\n\n            alert('There was an error trying to delete this post. Try again later.');\n\n         }\n     });\n\n });\n\n}); // end $(window).load();\n}); // end jQuery(document).ready();\n"]}