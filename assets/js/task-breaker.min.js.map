{"version":3,"sources":["task-breaker.dev.js"],"names":["jQuery","document","ready","$","window","load","taskbreaker_file_attachments","attached_files","taskbreaker_process_file_attachment","event","container_id","files","target","data","FormData","container","each","key","value","append","task_breakerProjectSettings","nonce","remove","removeClass","ajax","url","task_breakerAjaxUrl","type","cache","dataType","processData","contentType","success","response","textStatus","jqXHR","console","log","error","message","parent","addClass","file","errorThrown","xhr","myXhr","ajaxSettings","progress","progress_percentage","upload","attr","addEventListener","e","lengthComputable","loaded","max","total","Math","floor","css","width","html","removeAttr","complete","__ThriveProjectModel","Backbone","View","extend","id","project_id","page","priority","current_page","max_page","min_page","show_completed","total_pages","ThriveProjectModel","__ThriveProjectView","el","model","search","template","events","click .task_breaker-project-tab-li-item-a","click .next-page","click .prev-page","submit #task-breaker-search-task-form","change #task_breaker-task-filter-select","switchView","elementID","$elementClicked","currentTarget","$tab_disabled","$is_tab_enabled","inArray","$active_content","$element","hideFilters","hide","showFilters","show","searchTasks","keywords","val","length","location","href","encodeURI","filter","this","currentRoute","history","getFragment","render","next","preventDefault","currPage","prev","single","ticket_id","__this","renderTask","message_long","showEditForm","task_id","__taskEditor","tinymce","get","setContent","task","taskEditor","title","description","getElementById","options","assign_users_meta","members_stack","option","createElement","ID","text","display_name","selected","appendChild","autoSuggestMembers","change","meta","meta_key","meta_value","__callback","ajaxurl","method","action","httpResponse","stats","initialize","isShow","__display","__opacity","display","opacity","updateStats","task_status","status","toLowerCase","remaining","completed","ceil","selectElement","clearSelect","$resultTemplate","result","avatar","$state","select2","maximumInputLength","placeholder","allowClear","minimumResultsForSearch","Infinity","minimumInputLength","tag","params","query","group_id","current_group_id","term","user_id_collection","delay","templateResult","ThriveProjectView","__ThriveProjectRoute","Router","routes","tasks","tasks/dashboard","tasks/settings","tasks/completed","tasks/add","tasks/edit/:id","tasks/page/:page","tasks/view/:id","tasks/search/:search_keyword","view","index","dashboard","settings","add","editors","task_breakerTaskDescription","completed_tasks","edit","view_task","ThriveProjectRoute","on","route","start","click","element","taskDescription","getContent","milestone_id","task_breakerTaskConfig","currentProjectId","user_id","currentUserId","file_attachments","parseInt","trim","taskDescriptionObject","httpRequestParameters","_delete_confirm","confirm","task_project_id","__http_params","message_text","updateTaskBtn","comment_ticket_id","comment_details","task_priority","comment_completed","details","confirm_delete","comment_ticket","comment_id","fadeOut","projectContent","__projectContentObj","content","prepend","reload","setTimeout","alert","redirect"],"mappings":"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","file":"task-breaker.min.js","sourcesContent":["jQuery(document).ready(function($) {\n\t'use strict'\n\t$(window).load( function() {  \n\n/**\n * This global object will hold the string that contains the name of the file attached in to task.\n * @type Object\n */\nvar taskbreaker_file_attachments = {\n\tattached_files: ''\n};\n/**\n * This function serves as a callback function for the file attachment event handler.\n * @param  object event The onchange event callback argument.\n * @return void\n */\nvar taskbreaker_process_file_attachment = function ( event, container_id ) {\n\n    // The upload file event object.\n    var files = event.target.files;\n    // The form data.\n    var data = new FormData();\n\n    var container = '#' + container_id + ' ';\n\n    // Append all files into data form data.\n    $.each( files, function( key, value ) {\n        data.append( key, value );\n    });\n\n    // Append the action.\n    data.append( 'action', 'task_breaker_transactions_request' );\n    // Append the method.\n    data.append( 'method', 'task_breaker_transaction_task_file_attachment' );\n    // Append the nonce.\n    data.append( 'nonce', task_breakerProjectSettings.nonce );\n    // Remove any existing error messages.\n    $( container + '.taskbreaker-upload-error' ).remove();\n    // Clear any progress messages.\n    $( container + '.taskbreaker-upload-error-text-helper').removeClass('active');\n    $( container + '.taskbreaker-upload-success-text-helper').removeClass('active');\n\n    // Begin ajax request.\n    $.ajax({\n        url: task_breakerAjaxUrl,\n        type: 'POST',\n        data: data,\n        cache: false,\n        dataType: 'json',\n        processData: false, // Don't process the files.\n        contentType: false, // Set content type to false as jQuery will tell the server its a query string request.\n        success: function( response, textStatus, jqXHR )\n        {\n            console.log(response);\n            if( typeof response.error === 'undefined' )\n            {   \n                if ( response !== 0 ) {\n\n                    if ( response.message === 'fail' ) {\n                        taskbreaker_file_attachments.attached_files = '';\n                        $( container + '.tb-file-attachment-progress').parent().append('<div class=\"taskbreaker-upload-error\">'+response.response+'</div>');\n                        $( container + '.taskbreaker-upload-error-text-helper').addClass('active');\n                        $( container + '.taskbreaker-upload-success-text-helper').removeClass('active');\n                    } else {\n                        taskbreaker_file_attachments.attached_files = response.file;\n                        $( container + '.taskbreaker-upload-error').remove();\n                        $( container + '.taskbreaker-upload-error-text-helper').removeClass('active');\n                        $( container + '.taskbreaker-upload-success-text-helper').addClass('active');\n                        console.log('setting data to $taskbreaker_file_attachments.attached_files...');\n                        console.log(taskbreaker_file_attachments.attached_files);\n                    }\n                    \n                } else {\n                    $( container + '.taskbreaker-upload-error-text-helper').addClass('active');\n                    $( container + '.taskbreaker-upload-success-text-helper').removeClass('active');\n                    $( container + '.tb-file-attachment-progress').parent().append('<div class=\"taskbreaker-upload-error\">The application did not received any response from the server. Try uploading smaller files.</div>');\n                    taskbreaker_file_attachments.attached_files = '';\n                }\n                \n            }\n            else\n            {\n                // Handle errors here\n                console.log('ERRORS: ' + response.error);\n            }\n        },\n        error: function(jqXHR, textStatus, errorThrown)\n        {\n            // Handle errors here\n            console.log('ERRORS: ' + textStatus);\n            // STOP LOADING SPINNER\n        },\n        xhr: function(){\n\n            var myXhr = $.ajaxSettings.xhr();\n            var progress = 0;\n            var progress_percentage = '0%';\n\n            if ( myXhr.upload ) {\n\n                // For handling the progress of the upload\n                $( container + '.tb-file-attachment-progress-wrap').addClass('active');\n                $( container + '.task_breaker-submit-btn').attr('disabled', true);\n\n                myXhr.upload.addEventListener('progress', function(e) {\n\n                    if ( e.lengthComputable ) {\n                        $('progress').attr({\n                            value: e.loaded,\n                            max: e.total,\n                        });\n                        progress = ( e.loaded / e.total ) * 100;\n                        if ( typeof progress === 'number' ) {\n                            progress_percentage = Math.floor( progress ) + '%';\n                            $( container + '.tb-file-attachment-progress-movable').css({\n                                width: progress_percentage\n                            });\n                            $( container + '.taskbreaker-upload-progress-value').html( progress_percentage );\n                        }\n                    }\n\n                    if ( progress === 100 ) {\n                        $( container + '.task_breaker-submit-btn').removeAttr('disabled');\n                    }\n\n                } , false );\n\n            }\n            return myXhr;\n        },\n        complete: function() {\n            console.log('request complete... stopping the spinner...');\n        }\n    });\n};\nvar __ThriveProjectModel = Backbone.View.extend({\n    id: 0,\n    project_id: task_breakerProjectSettings.project_id,\n    page: 1,\n    priority: -1,\n    current_page: 1,\n    max_page: 1,\n    min_page: 1,\n    total: 0,\n    show_completed: 'no',\n    total_pages: 0,\n});\n\nvar ThriveProjectModel = new __ThriveProjectModel();\n\nvar __ThriveProjectView = Backbone.View.extend({\n\n    el: 'body',\n    model: ThriveProjectModel,\n    search: '',\n    template: '',\n    events: {\n        \"click .task_breaker-project-tab-li-item-a\": \"switchView\",\n        \"click .next-page\": \"next\",\n        \"click .prev-page\": \"prev\",\n        \"submit #task-breaker-search-task-form\": \"searchTasks\",\n        \"change #task_breaker-task-filter-select\": \"filter\"\n    },\n\n    switchView: function( e, elementID ) {\n\n        if (e) {\n            \n            var $elementClicked = $( e.currentTarget );\n\n            // Disable clicking on the 'Add New Tab' if we are on 'Task Add' Route.\n            var $tab_disabled = ['task_breaker-project-edit-tab', 'task_breaker-project-edit', 'task_breaker-project-add-new'];\n            var $is_tab_enabled = $.inArray( $elementClicked.attr( 'id' ), $tab_disabled );\n\n            console.log( $is_tab_enabled );\n\n            if ( -1 !== $is_tab_enabled ) {\n                console.log( $elementClicked.attr( 'id' ) );\n                return false;\n            } \n\n        }\n\n        $('#task_breaker-project-edit-tab').css('display', 'none');\n        $('#task_breaker-project-add-new').css('display', 'none');\n\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n\n        var $active_content = \"\";\n\n        if (e) {\n\n            var $element = $(e.currentTarget);\n\n            $active_content = $element.attr('data-content');\n\n            // Activate selected tab.\n            $element.parent().addClass('active');\n\n            $('div[data-content=' + $active_content + ']').addClass('active');\n\n        } else {\n\n            $(elementID).addClass('active');\n\n            $active_content = $(elementID).attr('data-content');\n\n            $('a[data-content=' + $active_content + ']').parent().addClass('active');\n        }\n    },\n\n    hideFilters: function() {\n        $('#task_breaker-tasks-filter').hide();\n    },\n\n    showFilters: function() {\n        $('#task_breaker-tasks-filter').show();\n    },\n\n    searchTasks: function( event ) {\n        \n        var keywords = $('#task_breaker-task-search-field').val();\n\n        if ( 0 === keywords.length ) {\n            location.href = '#tasks';\n        } else {\n            location.href = '#tasks/search/' + encodeURI(keywords);\n        }\n\n        return false;\n\n    },\n\n    filter: function(e) {\n        this.model.priority = e.currentTarget.value;\n\n        var currentRoute = Backbone.history.getFragment();\n\n        if (currentRoute != 'tasks') {\n            location.href = '#tasks';\n        } else {\n            this.render();\n        }\n    },\n\n    next: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage < this.model.max_page) {\n            this.model.page = ++currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    prev: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage > this.model.min_page) {\n            this.model.page = --currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    single: function(ticket_id) {\n        this.progress(true);\n        var __this = this;\n        this.template = 'single_task_index';\n        // load the task\n        this.renderTask(function( response ) {\n\n            __this.progress( false );\n\n            if ( response.message == 'fail' ) {\n                $('#task_breaker-project-tasks').html(\"<p class='info' id='message'>\"+response.message_long+\"</p>\");\n            }\n\n            if ( response.html ) {\n                $('#task_breaker-project-tasks').html(response.html);\n            }\n        });\n    },\n\n    showEditForm: function(task_id) {\n\n        var __this = this;\n\n        var __taskEditor = '';\n\n        if ( typeof tinymce !== 'undefined' ) {\n            \n            __taskEditor = tinymce.get('task_breakerTaskEditDescription');\n\n        } \n\n        this.progress(true);\n\n        if ( __taskEditor ) {\n            __taskEditor.setContent( '' );\n        } else {\n            $( '#task_breakerTaskEditDescription' ).val( '' );\n        }\n\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('a#task_breaker-project-edit-tab').css('display', 'block').parent().addClass('active');\n        $('#task_breaker-project-edit-context').addClass('active');\n\n        $('#task_breakerTaskId').attr('disabled', true).val('loading...');\n        $('#task_breakerTaskEditTitle').attr('disabled', true).val('loading...');\n        $(\"#task_breaker-task-edit-select-id\").attr('disabled', true);\n\n        this.model.id = task_id;\n\n        // Render the task.\n        this.renderTask( function( response ) {\n\n            __this.progress( false );\n\n            if ( response.task ) {\n\n                var task = response.task;\n\n                var taskEditor = '';\n\n                if ( typeof tinymce !== 'undefined' ) {\n                    taskEditor = tinymce.get('task_breakerTaskEditDescription');\n                }\n\n                $('#task_breakerTaskId').val(task.id).removeAttr(\"disabled\");\n\n                $('#task_breakerTaskEditTitle').val(task.title).removeAttr(\"disabled\");\n\n                if ( taskEditor )\n                {\n                    taskEditor.setContent( task.description );\n                } else\n                {\n                    $( '#task_breakerTaskEditDescription' ).val( task.description );\n                }\n\n                $(\"#task-user-assigned-edit\").val('');\n\n                if ( document.getElementById(\"task-user-assigned-edit\") ) {\n                    document.getElementById(\"task-user-assigned-edit\").options.length = 0;\n                }\n\n                $.each( task.assign_users_meta.members_stack, function( key, val ) {\n                    var option = document.createElement(\"option\");\n                        option.value = val.ID;\n                        option.text  = val.display_name;\n                        option.selected  = \"selected\";\n                        document.getElementById(\"task-user-assigned-edit\").appendChild( option );\n                });\n\n                __this.autoSuggestMembers( $(\"#task-user-assigned-edit\"), true, task );\n\n                $( \"#task_breaker-task-edit-select-id\" ).val( task.priority ).change().removeAttr(\"disabled\");\n\n                // Update Files Attached here..\n                //alert('Updating file attachments...');\n                if ( task.meta ) {\n                    $.each ( task.meta, function( key, val ){\n                        if ( \"file_attachment\" === val.meta_key ) {\n                            $('#taskbreaker-file-attachment-edit .tasbreaker-file-attached').html(val.meta_value);\n                            $('#task-breaker-form-file-attachment-edit-field').removeAttr('disabled');\n                        }\n                    });\n                } else {\n                    $('#taskbreaker-file-attachment-edit .tasbreaker-file-attached').html('No files attached');\n                }\n\n            }\n\n            return;\n\n        });\n\n    },\n\n    renderTask: function( __callback ) {\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                template: this.template,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( httpResponse ) {\n                __callback( httpResponse );\n            }\n        });\n    },\n\n    render: function() {\n\n        var __this = this;\n        this.progress(true);\n\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                page: this.model.page,\n                search: this.search,\n                priority: this.model.priority,\n                template: 'render_tasks',\n                show_completed: this.model.show_completed,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( response ) {\n\n                __this.progress(false);\n\n                if (response.message == 'success') {\n                    if (response.task.stats) {\n                        // update model max_page and min_page\n                        ThriveProjectModel.max_page = response.task.stats.max_page;\n                        ThriveProjectModel.min_page = response.task.stats.min_page;\n                    }\n                    // render the result\n                    $('#task_breaker-project-tasks').html(response.html);\n                }\n\n                if ( 0 === response.task.length ) {\n                    $('#task_breaker-project-tasks').html('<div class=\"task-breaker-message danger\">No tasks found. Try different keywords and filters.</div>');\n                }\n\n            },\n            error: function() {\n\n            }\n        });\n    },\n\n    initialize: function() {\n\n    },\n\n    progress: function(isShow) {\n\n        var __display = 'none';\n        var __opacity = 1;\n\n        if ( isShow ) {\n            __display = 'block';\n            __opacity = 0.25;\n        }\n\n        $('#task_breaker-preloader').css({\n            display: __display\n        });\n\n        $('#task_breaker-project-tasks').css({\n            opacity: __opacity\n        });\n\n        return;\n    },\n\n    updateStats: function( stats ) {\n\n        var priority = null;\n        var task_status = null;\n\n        if ( stats.status ) {\n            priority = stats.status.priority;\n            task_status = stats.status.task_status;\n        }\n\n        if ( task_status ) {\n            $('#task-details-status').text( task_status ).removeClass(\"open close\").addClass( task_status.toLowerCase() );\n        }\n\n        if ( priority ) {\n            $('#task-details-priority').text( priority ).removeClass(\"normal high critical\").addClass( priority.toLowerCase() );\n        }\n\n        $( '.task_breaker-total-tasks' ).text( stats.total );\n        $( '.task_breaker-remaining-tasks-count' ).text( stats.remaining );\n        $( '.task-progress-completed' ).text( stats.completed );\n        $( '.task-progress-percentage-label > span' ).text( stats.progress );\n\n        // Update the progress bar css width.\n        $( '.task-progress-percentage' ).css({\n            width: Math.ceil( ( ( stats.completed / stats.total ) * 100 ) ) + '%'\n        });\n\n    },\n\n    autoSuggestMembers: function( selectElement, clearSelect, task ) {\n\n        if ( ! selectElement ) {\n            return;\n        }\n\n        var $resultTemplate = function( result ) {\n\n\t\t\tif ( result.avatar ) {\n\n\t\t\t    var $state = $('<span><img class=\"result-template-avatar\" src=\"'+result.avatar+'\" alt=\"s\" />'+result.text+'</span>');\n\t\t\t}\n\n\t\t\treturn $state;\n\t\t}\n\n\n\t\tselectElement.select2({\n\t\t\tmaximumInputLength: 20,\n\t\t\tplaceholder: \"Type member\\'s name...\",\n\t\t\tallowClear: true,\n\t\t\tminimumResultsForSearch: Infinity,\n\t\t\tminimumInputLength: 2,\n\t\t\ttag: true,\n\t\t\tajax: {\n\n\t\t\t\tdata: function ( params ) {\n\n\t\t\t\t\tvar query = {\n\t\t\t\t\t\taction: 'task_breaker_transactions_request',\n\t\t\t\t\t\tmethod: 'task_breaker_transactions_user_suggest',\n\t\t\t\t\t\tnonce: task_breakerProjectSettings.nonce,\n\t\t\t\t\t\tgroup_id: task_breakerProjectSettings.current_group_id,\n\t\t\t\t\t\tterm: params.term,\n\t\t\t\t\t\tuser_id_collection: 0\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( selectElement.val() ) {\n\t\t\t\t\t\tquery.user_id_collection = selectElement.val();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn query;\n\t\t\t\t},\n\t\t\t\turl: task_breakerAjaxUrl,\n\t\t\t\tdelay: 250,\n\t\t\t\tcache: true\n\t\t\t},\n\t\t\ttemplateResult: $resultTemplate\n\t\t});\n    }\n});\n\nvar ThriveProjectView = new __ThriveProjectView();\n\nvar __ThriveProjectRoute = Backbone.Router.extend({\n\n    routes: {\n        \"tasks\": \"index\",\n        \"tasks/dashboard\": \"dashboard\",\n        \"tasks/settings\": \"settings\",\n        \"tasks/completed\": \"completed_tasks\",\n        \"tasks/add\": \"add\",\n        \"tasks/edit/:id\": \"edit\",\n        \"tasks/page/:page\": \"next\",\n        \"tasks/view/:id\": \"view_task\",\n        \"tasks/search/:search_keyword\": 'search',\n    },\n    view: ThriveProjectView,\n    model: ThriveProjectModel,\n    index: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n        this.model.page = 1;\n        this.model.id = 0;\n        this.model.show_completed = 'no';\n\n        this.view.search = '';\n        this.view.render();\n    },\n\n    dashboard: function() {\n        this.view.switchView(null, '#task_breaker-project-dashboard-context');\n    },\n    settings: function() {\n        this.view.switchView(null, '#task_breaker-project-settings-context');\n    },\n    add: function() {\n        this.view.switchView(null, '#task_breaker-project-add-new-context');\n\n        $('#task_breaker-project-add-new').css('display', 'block');\n        $('#task-user-assigned').val(\"\");\n        this.view.autoSuggestMembers( $(\"#task-user-assigned\"), true, null );\n\n        if ( tinymce.editors.task_breakerTaskDescription ) {\n            tinymce.editors.task_breakerTaskDescription.setContent('');\n        }\n    },\n    completed_tasks: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n\n        this.model.show_completed = 'yes';\n        this.view.render();\n    },\n    edit: function(task_id) {\n        this.view.showEditForm(task_id);\n        $('#task_breaker-edit-task-message').html('');\n    },\n    next: function(page) {\n        this.model.page = page;\n        this.view.render();\n    },\n    view_task: function(task_id) {\n        this.model.id = task_id;\n        this.view.single(task_id);\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n    },\n    search: function(keywords) {\n        this.model.page = 1;\n        this.model.id = 0;\n        this.view.search = keywords;\n        this.view.render();\n    }\n});\n\nvar ThriveProjectRoute = new __ThriveProjectRoute();\n\nThriveProjectRoute.on('route', function(route) {\n    if ('view_task' === route) {\n        this.view.hideFilters();\n    } else {\n        this.view.showFilters();\n    }\n});\n\nBackbone.history.start();\n\n/**\n * This variable is really important for holding client uploaded files.\n * @type string The file name.\n */\n$('#task_breaker-submit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n    var __taskEditor = tinymce.get( 'task_breakerTaskDescription' );\n\n    if ( __taskEditor ) {\n       taskDescription =  __taskEditor.getContent();\n    } else {\n       taskDescription = $( '#task_breakerTaskDescription' ).val();\n    }\n\n    $.ajax({\n        url: ajaxurl,\n        data: {\n\n            action: 'task_breaker_transactions_request',\n            method: 'task_breaker_transaction_add_ticket',\n\n            description: taskDescription,\n\n            title: $('#task_breakerTaskTitle').val(),\n            milestone_id: $('#task_breakerTaskMilestone').val(),\n            priority: $('select#task_breaker-task-priority-select').val(),\n\n            nonce: task_breakerProjectSettings.nonce,\n\n            project_id: task_breakerTaskConfig.currentProjectId,\n            user_id: task_breakerTaskConfig.currentUserId,\n            user_id_collection: $('select#task-user-assigned').val(),\n            file_attachments: taskbreaker_file_attachments.attached_files\n        },\n\n        method: 'post',\n\n        success: function( message ) {\n\n            // Total tasks view.\n            var total_tasks = parseInt( $('.task_breaker-total-tasks').text().trim() );\n\n            // Remaining tasks view\n            var remaining_tasks = parseInt( $('.task_breaker-remaining-tasks-count').text().trim() );\n\n           // console.log( message );\n\n            if ( message.message === 'success' ) {\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n                $('#task_breakerTaskDescription').val('');\n\n                $('#task_breakerTaskTitle').val('');\n\n                ThriveProjectView.updateStats( message.stats );\n\n                location.href = \"#tasks/view/\" + message.response.id;\n\n                 console.log('checking $taskbreaker_file_attachments.attached_files value...');\n                        console.log(taskbreaker_file_attachments.attached_files);\n\n\n            } else {\n\n                $('#task_breaker-add-task-message').html('<p class=\"error\">'+message.response+'</p>').show().addClass('error');\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n            }\n        },\n        error: function() {\n\n        }\n    }); // End $.ajax call.\n}); // End $('#task_breaker-submit-btn').click() call.\n\n/**\n * Attach event to file attachment. When changed upload the file to user logged in '/tmp' directory.\n * @return void\n */\n$('#task-breaker-form-file-attachment-field').on( 'change', function( event ) {\n    \n    taskbreaker_process_file_attachment( event, 'taskbreaker-file-attachment-add' );\n\n    return;\n});\n\n$('#task_breaker-edit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n\n    var taskDescriptionObject = tinymce.get( 'task_breakerTaskEditDescription' );\n\n    if ( taskDescriptionObject ) {\n\n        taskDescription = taskDescriptionObject.getContent();\n\n    } else {\n\n        taskDescription = $('#task_breakerTaskEditDescription').val();\n        \n    }\n\n    var httpRequestParameters = {\n        description: taskDescription,\n        nonce: task_breakerProjectSettings.nonce,\n        project_id: task_breakerTaskConfig.currentProjectId,\n        user_id: task_breakerTaskConfig.currentUserId,\n\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_edit_ticket',\n\n        title: $('#task_breakerTaskEditTitle').val(),\n        milestone_id: $('#task_breakerTaskMilestone').val(),\n        id: $('#task_breakerTaskId').val(),\n        priority: $('select[name=\"task_breaker-task-edit-priority\"]').val(),\n        user_id_collection: $('select#task-user-assigned-edit').val()\n    }\n\n    $.ajax({\n\n        url: ajaxurl,\n        data: httpRequestParameters,\n\n        method: 'post',\n\n        success: function( response ) {\n\n            var message = \"<p class='task-breaker-message success'>Task successfully updated <a href='#tasks/view/\" + response.id + \"'>&#65515; View</a></p>\";\n\n            if ( 'fail' === response.message && 'no_changes' !== response.type ) {\n\n                message = \"<p class='task-breaker-message danger'>There was an error updating the task. All fields are required.</a></p>\";\n\n            }\n\n            if ( 'fail' === response.message && 'unauthorized' === response.type ) {\n\n                message = \"<p class='task-breaker-message danger'>You are not allowed to modify this task. Only group project administrators and group projects moderators are allowed.</a></p>\";\n\n            }\n\n            $('#task_breaker-edit-task-message').html( message ).show();\n\n            element.attr('disabled', false);\n\n            element.text('Update Task');\n\n            return;\n\n        },\n\n        error: function() {\n\n            // Todo: Better handling of http errors and timeouts.\n            console.log('An Error Occured [task_breaker.js]#311');\n\n            return;\n        }\n    });\n}); // end $('#task_breaker-edit-btn').click()\n\n/**\n * Attach event to file attachment. When changed upload the file to user logged in '/tmp' directory.\n * @return void\n */\n$('#task-breaker-form-file-attachment-edit-field').on( 'change', function( event ) {\n    console.log('test');\n    taskbreaker_process_file_attachment( event, 'taskbreaker-file-attachment-edit' );\n\n    return;\n});\n\n // Delete Task Single\n $('body').on('click', '#task_breaker-delete-btn', function() {\n\n    var _delete_confirm = confirm(\"Are you sure you want to delete this task? This action is irreversible\");\n\n    if (!_delete_confirm) {\n       return;\n    }\n\n    var $element = $(this);\n\n    var task_id = parseInt( ThriveProjectModel.id );\n\n    var task_project_id = parseInt( ThriveProjectModel.project_id );\n\n    var __http_params = {\n\n       action: 'task_breaker_transactions_request',\n       method: 'task_breaker_transaction_delete_ticket',\n       id: task_id,\n       project_id: task_project_id,\n       nonce: task_breakerProjectSettings.nonce\n\n   };\n\n   ThriveProjectView.progress(true);\n\n   $element.text('Deleting ...');\n\n   $.ajax({\n\n       url: ajaxurl,\n       data: __http_params,\n       method: 'post',\n       success: function( response ) {\n\n            ThriveProjectView.progress( false );\n\n            ThriveProjectView.updateStats( response.stats );\n\n            if ( 'fail' === response.message) {\n\n                var message = \"<p class='task-breaker-message danger'>\"+response.message_text+\"</p>\";\n                \n                $('#task_breaker-edit-task-message').html( message ).show();\n\n                return false;\n\n            } else {\n\n                location.href = \"#tasks\";\n\n                ThriveProjectView.switchView(null, '#task_breaker-project-tasks-context');\n                \n            }\n\n            $element.text('Delete');\n\n       },\n\n       error: function() {\n\n           ThriveProjectView.progress(false);\n\n           $element.text('Delete');\n\n       }\n   });\n }); // End Delete Task\n\n  $('body').on('click', '#updateTaskBtn', function() {\n\n      var updateTaskBtn = $(this);\n\n      updateTaskBtn.attr('disabled', 'disabled');\n\n      var comment_ticket_id = ThriveProjectModel.id,\n          comment_details = $('#task-comment-content').val(),\n          task_priority = $('#task_breaker-task-priority-update-select').val(),\n          comment_completed = $('input[name=task_commment_completed]:checked').val(),\n          task_project_id = parseInt( ThriveProjectModel.project_id );\n\n      if (0 === comment_ticket_id) {\n          return;\n      }\n\n      // notify the user when submitting the comment form\n      ThriveProjectView.progress(true);\n\n      var __http_params = {\n          action: 'task_breaker_transactions_request',\n          method: 'task_breaker_transaction_add_comment_to_ticket',\n          ticket_id: comment_ticket_id,\n          priority: task_priority,\n          details: comment_details,\n          completed: comment_completed,\n          project_id: task_project_id,\n          nonce: task_breakerProjectSettings.nonce\n      };\n\n      $.ajax({\n          url: ajaxurl,\n          data: __http_params,\n          method: 'post',\n          success: function( response ) {\n\n              updateTaskBtn.attr('disabled', false);\n              ThriveProjectView.progress( false );\n\n              $('#task-comment-content').val('');\n              $('#task-lists').append(response.result);\n\n\n              if (\"yes\" === comment_completed) {\n\n                  // disable old radios\n                  $('#ticketStatusInProgress').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusComplete').attr('disabled', true).attr('checked', false);\n                  $('#comment-completed-radio').addClass('hide');\n                  // enable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', false);\n                  $('#task_breaker-comment-completed-radio').removeClass('hide');\n\n              }\n\n              if ( \"reopen\" === comment_completed ) {\n\n                  // Enable old radios\n                  $('#ticketStatusInProgress').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusComplete').attr('disabled', false).attr('checked', false);\n                  $('#comment-completed-radio').removeClass('hide');\n                  // Disable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', true);\n                  $('#task_breaker-comment-completed-radio').addClass('hide');\n\n              }\n              // console.log(response.stats);\n              ThriveProjectView.updateStats( response.stats );\n          },\n          error: function() {\n              updateTaskBtn.attr('disabled', false);\n              ThriveProjectView.progress(false);\n          }\n      });\n  }); // end UpdateTask\n\n// Delete Comment Event.\n$('body').on('click', 'a.task_breaker-delete-comment', function(e) {\n\n    e.preventDefault();\n\n    // Ask the user to confirm if he/she really wanted to delete the task comment.\n    var confirm_delete = confirm(\"Are you sure you want to delete this comment? This action is irreversible. \");\n\n    // Exit if the user decided to cancel the task comment.\n    if (!confirm_delete) {\n        return false;\n    }\n\n    var $element = $(this);\n\n    var comment_ticket = parseInt($(this).attr('data-comment-id'));\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_delete_comment',\n        comment_id: comment_ticket,\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    // Send request to server to delete the comment.\n    ThriveProjectView.progress(true);\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            if (response.message == 'success') {\n\n                $element.parent().parent().parent().parent().fadeOut(function() {\n                    $(this).remove();\n                });\n\n            } else {\n\n                this.error();\n\n            }\n        },\n        error: function() {\n            ThriveProjectView.progress(false);\n            $element.parent().append('<p class=\"error\">Transaction Error: There was an error trying to delete this comment.</p>');\n        }\n    });\n}); // end Delete Comment\n\n/**\n * Add new project script\n *\n * @Todo: Current handle for adding project is inside archive.js\n */\n\n// Update Project\n$('body').on('click', '#task_breakerUpdateProjectBtn', function() {\n\n    var element = $(this);\n\n    var projectContent = \"\";\n\n    var __projectContentObj = tinymce.get( 'task_breakerProjectContent' );\n\n        if ( __projectContentObj ) {\n\n            projectContent = __projectContentObj.getContent();\n\n        } else {\n\n            projectContent = $('#task_breakerProjectContent').val();\n\n        }\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transactions_update_project',\n        id: parseInt( $('#task_breaker-project-id').val() ),\n        title: $( '#task_breaker-project-name' ).val(),\n        content: projectContent,\n        group_id: parseInt( $('select[name=task_breaker-project-assigned-group]').val() ),\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    element.attr('disabled', true).text('Updating ...');\n\n    ThriveProjectView.progress(true);\n\n    $('.task_breaker-project-updated').remove();\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            element.attr('disabled', false).text('Update Project');\n\n            if (response.message === 'success') {\n\n                // Update the project title.\n                $('article .entry-header > .entry-title').text($('#task_breaker-project-name').val());\n\n                element.parent().parent().prepend(\n                    '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                    '<p>Project details successfully updated.</p>' +\n                    '</div>'\n                );\n\n                location.reload();\n\n            } else {\n\n                if (\"authentication_error\" === response.type ) {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated error updated\">' +\n                        '<p>Only group administrators and moderators can update the project settings.</p>' +\n                        '</div>'\n                    );\n\n                } else {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                        '<p>There was an error saving the project. All fields are required.</p>' +\n                        '</div>'\n                    );\n\n                }\n\n            }\n\n            ThriveProjectView.progress(false);\n\n            setTimeout(function() {\n\n                $('.task_breaker-project-updated').fadeOut();\n\n            }, 3000);\n\n            return;\n\n        },\n\n        error: function() {\n\n            alert('connection failure');\n            return;\n\n        }\n    });\n}); // Project Update End.\n\n $('body').on('click', '#task_breakerDeleteProjectBtn', function() {\n\n\n     if ( !confirm('Are you sure you want to delete this project? All the tickets under this project will be deleted as well. This action cannot be undone.')) {\n         return;\n     }\n\n     var project_id = $('#task_breaker-project-id').val();\n\n     var __http_params = {\n         action: 'task_breaker_transactions_request',\n         method: 'task_breaker_transactions_delete_project',\n         id: project_id,\n         nonce: task_breakerProjectSettings.nonce\n     };\n\n     $(this).text('Deleting...');\n\n     $.ajax({\n\n         url: ajaxurl,\n\n         method: 'post',\n\n         data: __http_params,\n\n         success: function( response ) {\n\n             if (response.message == 'success') {\n\n                 window.location = response.redirect;\n\n             } else {\n\n                this.error();\n\n             }\n\n             return;\n\n         },\n\n         error: function() {\n\n            alert('There was an error trying to delete this post. Try again later.');\n\n         }\n     });\n\n });\n\n}); // end $(window).load();\n}); // end jQuery(document).ready();\n"]}