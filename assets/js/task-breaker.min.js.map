{"version":3,"sources":["task-breaker.dev.js"],"names":["jQuery","document","ready","$","window","load","__ThriveProjectModel","Backbone","View","extend","id","project_id","task_breakerProjectSettings","page","priority","current_page","max_page","min_page","total","show_completed","total_pages","ThriveProjectModel","__ThriveProjectView","el","model","search","template","events","click .task_breaker-project-tab-li-item-a","click .next-page","click .prev-page","click #task_breaker-task-search-submit","change #task_breaker-task-filter-select","switchView","e","elementID","css","removeClass","$active_content","$element","currentTarget","attr","parent","addClass","hideFilters","hide","showFilters","show","searchTasks","keywords","val","length","location","href","encodeURI","filter","this","value","currentRoute","history","getFragment","render","next","preventDefault","currPage","prev","single","ticket_id","progress","__this","renderTask","response","message","html","message_long","showEditForm","task_id","__taskEditor","tinymce","get","setContent","task","taskEditor","removeAttr","title","description","change","__callback","ajax","url","ajaxurl","method","dataType","data","action","nonce","success","httpResponse","stats","error","initialize","isShow","__display","__opacity","display","opacity","updateStats","task_status","status","text","toLowerCase","remaining","completed","width","Math","ceil","ThriveProjectView","__ThriveProjectRoute","Router","routes","tasks","tasks/dashboard","tasks/settings","tasks/completed","tasks/add","tasks/edit/:id","tasks/page/:page","tasks/view/:id","tasks/search/:search_keyword","view","index","dashboard","settings","add","editors","task_breakerTaskDescription","completed_tasks","edit","view_task","ThriveProjectRoute","on","route","start","click","element","taskDescription","getContent","milestone_id","task_breakerTaskConfig","currentProjectId","user_id","currentUserId","parseInt","trim","taskDescriptionObject","type","console","log","_delete_confirm","confirm","task_project_id","__http_params","comment_ticket_id","comment_details","task_priority","comment_completed","details","append","result","confirm_delete","comment_ticket","comment_id","fadeOut","remove","projectContent","__projectContentObj","content","group_id","prepend","reload","setTimeout","alert","redirect"],"mappings":"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","file":"task-breaker.min.js","sourcesContent":["jQuery(document).ready(function($) {\n\t'use strict'\n\t$(window).load( function() {  \n\nvar __ThriveProjectModel = Backbone.View.extend({\n    id: 0,\n    project_id: task_breakerProjectSettings.project_id,\n    page: 1,\n    priority: -1,\n    current_page: 1,\n    max_page: 1,\n    min_page: 1,\n    total: 0,\n    show_completed: 'no',\n    total_pages: 0,\n});\n\nvar ThriveProjectModel = new __ThriveProjectModel();\n\nvar __ThriveProjectView = Backbone.View.extend({\n\n    el: 'body',\n    model: ThriveProjectModel,\n    search: '',\n    template: '',\n    events: {\n        \"click .task_breaker-project-tab-li-item-a\": \"switchView\",\n        \"click .next-page\": \"next\",\n        \"click .prev-page\": \"prev\",\n        \"click #task_breaker-task-search-submit\": \"searchTasks\",\n        \"change #task_breaker-task-filter-select\": \"filter\"\n    },\n\n    switchView: function(e, elementID) {\n\n        $('#task_breaker-project-edit-tab').css('display', 'none');\n        $('#task_breaker-project-add-new').css('display', 'none');\n\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n\n        var $active_content = \"\";\n\n        if (e) {\n\n            var $element = $(e.currentTarget);\n\n            $active_content = $element.attr('data-content');\n\n            // Activate selected tab.\n            $element.parent().addClass('active');\n\n            $('div[data-content=' + $active_content + ']').addClass('active');\n\n        } else {\n\n            $(elementID).addClass('active');\n\n            $active_content = $(elementID).attr('data-content');\n\n            $('a[data-content=' + $active_content + ']').parent().addClass('active');\n        }\n    },\n\n    hideFilters: function() {\n        $('#task_breaker-tasks-filter').hide();\n    },\n\n    showFilters: function() {\n        $('#task_breaker-tasks-filter').show();\n    },\n\n    searchTasks: function() {\n\n        var keywords = $('#task_breaker-task-search-field').val();\n\n        if ( 0 === keywords.length ) {\n            location.href = '#tasks';\n        } else {\n            location.href = '#tasks/search/' + encodeURI(keywords);\n        }\n\n    },\n\n    filter: function(e) {\n        this.model.priority = e.currentTarget.value;\n\n        var currentRoute = Backbone.history.getFragment();\n\n        if (currentRoute != 'tasks') {\n            location.href = '#tasks';\n        } else {\n            this.render();\n        }\n    },\n\n    next: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage < this.model.max_page) {\n            this.model.page = ++currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    prev: function(e) {\n        e.preventDefault();\n        var currPage = this.model.page;\n        if (currPage > this.model.min_page) {\n            this.model.page = --currPage;\n            location.href = '#tasks/page/' + this.model.page;\n        }\n    },\n\n    single: function(ticket_id) {\n        this.progress(true);\n        var __this = this;\n        this.template = 'task_breaker_ticket_single';\n        // load the task\n        this.renderTask(function( response ) {\n\n            __this.progress( false );\n\n            if ( response.message == 'fail' ) {\n                $('#task_breaker-project-tasks').html(\"<p class='info' id='message'>\"+response.message_long+\"</p>\");\n            }\n\n            if ( response.html ) {\n                $('#task_breaker-project-tasks').html(response.html);\n            }\n        });\n    },\n\n    showEditForm: function(task_id) {\n\n        this.progress(true);\n        var __this = this;\n\n        var __taskEditor = tinymce.get('task_breakerTaskEditDescription');\n\n        if ( __taskEditor ) {\n            __taskEditor.setContent( '' );\n        } else {\n            $( '#task_breakerTaskEditDescription' ).val( '' );\n        }\n\n        $('.task_breaker-project-tab-content-item').removeClass('active');\n        $('.task_breaker-project-tab-li-item').removeClass('active');\n        $('a#task_breaker-project-edit-tab').css('display', 'block').parent().addClass('active');\n        $('#task_breaker-project-edit-context').addClass('active');\n\n        $('#task_breakerTaskId').attr('disabled', true).val('loading...');\n        $('#task_breakerTaskEditTitle').attr('disabled', true).val('loading...');\n        $(\"#task_breaker-task-edit-select-id\").attr('disabled', true);\n\n        this.model.id = task_id;\n\n        // Render the task.\n        this.renderTask( function( response ) {\n\n            __this.progress( false );\n\n            if ( response.task ) {\n\n                var task = response.task;\n\n                var taskEditor = tinymce.get('task_breakerTaskEditDescription');\n\n                $('#task_breakerTaskId').val(task.id).removeAttr(\"disabled\");\n                $('#task_breakerTaskEditTitle').val(task.title).removeAttr(\"disabled\");\n\n                if ( taskEditor ) {\n                    taskEditor.setContent( task.description );\n                } else {\n                    $( '#task_breakerTaskEditDescription' ).val( task.description );\n                }\n\n                $( \"#task_breaker-task-edit-select-id\" ).val( task.priority ).change().removeAttr(\"disabled\");\n\n            }\n\n            return;\n\n        });\n\n    },\n\n    renderTask: function( __callback ) {\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                template: this.template,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( httpResponse ) {\n                __callback( httpResponse );\n            }\n        });\n    },\n\n    render: function() {\n\n        var __this = this;\n        this.progress(true);\n\n        $.ajax({\n            url: ajaxurl,\n            method: 'get',\n            dataType: 'json',\n            data: {\n                action: 'task_breaker_transactions_request',\n                method: 'task_breaker_transaction_fetch_task',\n                id: this.model.id,\n                project_id: this.model.project_id,\n                page: this.model.page,\n                search: this.search,\n                priority: this.model.priority,\n                template: 'task_breaker_the_tasks',\n                show_completed: this.model.show_completed,\n                nonce: task_breakerProjectSettings.nonce\n            },\n            success: function( response ) {\n\n                __this.progress(false);\n\n                if (response.message == 'success') {\n                    if (response.task.stats) {\n                        // update model max_page and min_page\n                        ThriveProjectModel.max_page = response.task.stats.max_page;\n                        ThriveProjectModel.min_page = response.task.stats.min_page;\n                    }\n                    // render the result\n                    $('#task_breaker-project-tasks').html(response.html);\n                }\n\n                if (0 === response.task.length) {\n                    $('#task_breaker-project-tasks').html('<div class=\"error\" id=\"message\"><p>No tasks found. If you\\'re trying to find a task, kindly try different keywords and/or filters.</p></div>');\n                }\n\n            },\n            error: function() {\n\n            }\n        });\n    },\n\n    initialize: function() {\n\n    },\n\n    progress: function(isShow) {\n\n        var __display = 'none';\n        var __opacity = 1;\n\n        if ( isShow ) {\n            __display = 'block';\n            __opacity = 0.25;\n        }\n\n        $('#task_breaker-preloader').css({\n            display: __display\n        });\n\n        $('#task_breaker-project-tasks').css({\n            opacity: __opacity\n        });\n\n        return;\n    },\n\n    updateStats: function( stats ) {\n\n        var priority = null;\n        var task_status = null;\n\n        if ( stats.status ) {\n            priority = stats.status.priority;\n            task_status = stats.status.task_status;\n        }\n\n        if ( task_status ) {\n            $('#task-details-status').text( task_status ).removeClass(\"open close\").addClass( task_status.toLowerCase() );\n        }\n\n        if ( priority ) {\n            $('#task-details-priority').text( priority ).removeClass(\"normal high critical\").addClass( priority.toLowerCase() );\n        }\n\n        $( '.task_breaker-total-tasks' ).text( stats.total );\n        $( '.task_breaker-remaining-tasks-count' ).text( stats.remaining );\n        $( '.task-progress-completed' ).text( stats.completed );\n        $( '.task-progress-percentage-label > span' ).text( stats.progress );\n\n        // Update the progress bar css width.\n        $( '.task-progress-percentage' ).css({\n            width: Math.ceil( ( ( stats.completed / stats.total ) * 100 ) ) + '%'\n        });\n\n    }\n});\n\nvar ThriveProjectView = new __ThriveProjectView();\n\nvar __ThriveProjectRoute = Backbone.Router.extend({\n\n    routes: {\n        \"tasks\": \"index\",\n        \"tasks/dashboard\": \"dashboard\",\n        \"tasks/settings\": \"settings\",\n        \"tasks/completed\": \"completed_tasks\",\n        \"tasks/add\": \"add\",\n        \"tasks/edit/:id\": \"edit\",\n        \"tasks/page/:page\": \"next\",\n        \"tasks/view/:id\": \"view_task\",\n        \"tasks/search/:search_keyword\": 'search',\n    },\n    view: ThriveProjectView,\n    model: ThriveProjectModel,\n    index: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n        this.model.page = 1;\n        this.model.id = 0;\n        this.model.show_completed = 'no';\n\n        this.view.search = '';\n        this.view.render();\n    },\n\n    dashboard: function() {\n        this.view.switchView(null, '#task_breaker-project-dashboard-context');\n    },\n    settings: function() {\n        this.view.switchView(null, '#task_breaker-project-settings-context');\n    },\n    add: function() {\n        this.view.switchView(null, '#task_breaker-project-add-new-context');\n        $('#task_breaker-project-add-new').css('display', 'block');\n\n        if ( tinymce.editors.task_breakerTaskDescription ) {\n            tinymce.editors.task_breakerTaskDescription.setContent('');\n        }\n    },\n    completed_tasks: function() {\n\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n\n        this.model.show_completed = 'yes';\n        this.view.render();\n    },\n    edit: function(task_id) {\n        this.view.showEditForm(task_id);\n        $('#task_breaker-edit-task-message').html('');\n    },\n    next: function(page) {\n        this.model.page = page;\n        this.view.render();\n    },\n    view_task: function(task_id) {\n        this.model.id = task_id;\n        this.view.single(task_id);\n        this.view.switchView(null, '#task_breaker-project-tasks-context');\n    },\n    search: function(keywords) {\n        this.model.page = 1;\n        this.model.id = 0;\n        this.view.search = keywords;\n        this.view.render();\n    }\n});\n\nvar ThriveProjectRoute = new __ThriveProjectRoute();\n\nThriveProjectRoute.on('route', function(route) {\n    if ('view_task' === route) {\n        this.view.hideFilters();\n    } else {\n        this.view.showFilters();\n    }\n});\n\nBackbone.history.start();\n\n$('#task_breaker-submit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n    var __taskEditor = tinymce.get( 'task_breakerTaskDescription' );\n\n    if ( __taskEditor ) {\n       taskDescription =  __taskEditor.getContent();\n    } else {\n       taskDescription = $( '#task_breakerTaskDescription' ).val();\n    }\n\n    $.ajax({\n        url: ajaxurl,\n        data: {\n\n            action: 'task_breaker_transactions_request',\n            method: 'task_breaker_transaction_add_ticket',\n\n            description: taskDescription,\n\n            title: $('#task_breakerTaskTitle').val(),\n            milestone_id: $('#task_breakerTaskMilestone').val(),\n            priority: $('select#task_breaker-task-priority-select').val(),\n\n            nonce: task_breakerProjectSettings.nonce,\n\n            project_id: task_breakerTaskConfig.currentProjectId,\n            user_id: task_breakerTaskConfig.currentUserId\n        },\n\n        method: 'post',\n\n        success: function( message ) {\n\n            // Total tasks view.\n            var total_tasks = parseInt( $('.task_breaker-total-tasks').text().trim() );\n\n            // Remaining tasks view\n            var remaining_tasks = parseInt( $('.task_breaker-remaining-tasks-count').text().trim() );\n\n           // console.log( message );\n\n            if ( message.message === 'success' ) {\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n                $('#task_breakerTaskDescription').val('');\n\n                $('#task_breakerTaskTitle').val('');\n\n                ThriveProjectView.updateStats( message.stats );\n\n                location.href = \"#tasks/view/\" + message.response.id;\n\n\n            } else {\n\n                $('#task_breaker-add-task-message').html('<p class=\"error\">'+message.response+'</p>').show().addClass('error');\n\n\n\n                element.text('Save Task');\n\n                element.removeAttr('disabled');\n\n            }\n        },\n        error: function() {\n\n        }\n    }); // end $.ajax\n}); // end $('#task_breaker-submit-btn').click()\n\n$('#task_breaker-edit-btn').click(function(e) {\n\n    e.preventDefault();\n\n    var element = $(this);\n\n    element.attr('disabled', true);\n    element.text('Loading ...');\n\n    var taskDescription = \"\";\n    var taskDescriptionObject = tinymce.get( 'task_breakerTaskEditDescription' );\n\n    if ( taskDescriptionObject ) {\n        taskDescription = taskDescriptionObject.getContent();\n    } else {\n        taskDescription = $('#task_breakerTaskEditDescription').val();\n    }\n\n    $.ajax({\n\n        url: ajaxurl,\n        data: {\n\n            description: taskDescription,\n            nonce: task_breakerProjectSettings.nonce,\n            project_id: task_breakerTaskConfig.currentProjectId,\n            user_id: task_breakerTaskConfig.currentUserId,\n\n            action: 'task_breaker_transactions_request',\n            method: 'task_breaker_transaction_edit_ticket',\n\n            title: $('#task_breakerTaskEditTitle').val(),\n            milestone_id: $('#task_breakerTaskMilestone').val(),\n            id: $('#task_breakerTaskId').val(),\n            priority: $('select[name=\"task_breaker-task-edit-priority\"]').val()\n\n        },\n\n        method: 'post',\n\n        success: function( response ) {\n\n            var message = \"<p class='success'>Task successfully updated <a href='#tasks/view/\" + response.id + \"'>&#65515; View</a></p>\";\n\n            if ('fail' === response.message && 'no_changes' !== response.type) {\n\n                message = \"<p class='error'>There was an error updating the task. All fields are required.</a></p>\";\n\n            }\n\n            $('#task_breaker-edit-task-message').html(message).show();\n\n            element.attr('disabled', false);\n\n            element.text('Update Task');\n\n            return;\n\n        },\n\n        error: function() {\n\n            // Todo: Better handling of http errors and timeouts.\n            console.log('An Error Occured [task_breaker.js]#311');\n\n            return;\n        }\n    });\n}); // end $('#task_breaker-edit-btn').click()\n\n // Delete Task Single\n $('body').on('click', '#task_breaker-delete-btn', function() {\n\n    var _delete_confirm = confirm(\"Are you sure you want to delete this task? This action is irreversible\");\n\n    if (!_delete_confirm) {\n       return;\n    }\n\n    var $element = $(this);\n\n    var task_id = parseInt( ThriveProjectModel.id );\n\n    var task_project_id = parseInt( ThriveProjectModel.project_id );\n\n    var __http_params = {\n\n       action: 'task_breaker_transactions_request',\n       method: 'task_breaker_transaction_delete_ticket',\n       id: task_id,\n       project_id: task_project_id,\n       nonce: task_breakerProjectSettings.nonce\n\n   };\n\n   ThriveProjectView.progress(true);\n\n   $element.text('Deleting ...');\n\n   $.ajax({\n\n       url: ajaxurl,\n       data: __http_params,\n       method: 'post',\n       success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            ThriveProjectView.updateStats( response.stats );\n\n            location.href = \"#tasks\";\n\n            ThriveProjectView.switchView(null, '#task_breaker-project-tasks-context');\n\n            $element.text('Delete');\n\n       },\n\n       error: function() {\n           ThriveProjectView.progress(false);\n           location.href = \"#tasks\";\n           ThriveProjectView.switchView(null, '#task_breaker-project-tasks-context');\n           $element.text('Delete');\n\n       }\n   });\n }); // End Delete Task\n\n  $('body').on('click', '#updateTaskBtn', function() {\n\n      var comment_ticket_id = ThriveProjectModel.id,\n          comment_details = $('#task-comment-content').val(),\n          task_priority = $('#task_breaker-task-priority-update-select').val(),\n          comment_completed = $('input[name=task_commment_completed]:checked').val(),\n          task_project_id = parseInt( ThriveProjectModel.project_id );\n\n      if (0 === comment_ticket_id) {\n          return;\n      }\n\n      // notify the user when submitting the comment form\n      ThriveProjectView.progress(true);\n\n      var __http_params = {\n          action: 'task_breaker_transactions_request',\n          method: 'task_breaker_transaction_add_comment_to_ticket',\n          ticket_id: comment_ticket_id,\n          priority: task_priority,\n          details: comment_details,\n          completed: comment_completed,\n          project_id: task_project_id,\n          nonce: task_breakerProjectSettings.nonce\n      };\n\n      $.ajax({\n          url: ajaxurl,\n          data: __http_params,\n          method: 'post',\n          success: function( response ) {\n\n              ThriveProjectView.progress( false );\n\n              $('#task-comment-content').val('');\n              $('#task-lists').append(response.result);\n\n\n              if (\"yes\" === comment_completed) {\n\n                  // disable old radios\n                  $('#ticketStatusInProgress').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusComplete').attr('disabled', true).attr('checked', false);\n                  $('#comment-completed-radio').addClass('hide');\n                  // enable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', false);\n                  $('#task_breaker-comment-completed-radio').removeClass('hide');\n\n              }\n\n              if ( \"reopen\" === comment_completed ) {\n\n                  // Enable old radios\n                  $('#ticketStatusInProgress').attr('disabled', false).attr('checked', true);\n                  $('#ticketStatusComplete').attr('disabled', false).attr('checked', false);\n                  $('#comment-completed-radio').removeClass('hide');\n                  // Disable new radios\n                  $('#ticketStatusCompleteUpdate').attr('disabled', true).attr('checked', false);\n                  $('#ticketStatusReOpenUpdate').attr('disabled', true);\n                  $('#task_breaker-comment-completed-radio').addClass('hide');\n\n              }\n              // console.log(response.stats);\n              ThriveProjectView.updateStats( response.stats );\n          },\n          error: function() {\n\n              ThriveProjectView.progress(false);\n          }\n      });\n  }); // end UpdateTask\n\n// Delete Comment Event.\n$('body').on('click', 'a.task_breaker-delete-comment', function(e) {\n\n    e.preventDefault();\n\n    // Ask the user to confirm if he/she really wanted to delete the task comment.\n    var confirm_delete = confirm(\"Are you sure you want to delete this comment? This action is irreversible. \");\n\n    // Exit if the user decided to cancel the task comment.\n    if (!confirm_delete) {\n        return false;\n    }\n\n    var $element = $(this);\n\n    var comment_ticket = parseInt($(this).attr('data-comment-id'));\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transaction_delete_comment',\n        comment_id: comment_ticket,\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    // Send request to server to delete the comment.\n    ThriveProjectView.progress(true);\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            if (response.message == 'success') {\n\n                $element.parent().parent().parent().parent().fadeOut(function() {\n                    $(this).remove();\n                });\n\n            } else {\n\n                this.error();\n\n            }\n        },\n        error: function() {\n            ThriveProjectView.progress(false);\n            $element.parent().append('<p class=\"error\">Transaction Error: There was an error trying to delete this comment.</p>');\n        }\n    });\n}); // end Delete Comment\n\n/**\n * Add new project script\n *\n * @Todo: Current handle for adding project is inside archive.js\n */\n\n// Update Project\n$('body').on('click', '#task_breakerUpdateProjectBtn', function() {\n\n    var element = $(this);\n\n    var projectContent = \"\";\n\n    var __projectContentObj = tinymce.get( 'task_breakerProjectContent' );\n\n        if ( __projectContentObj ) {\n\n            projectContent = __projectContentObj.getContent();\n\n        } else {\n\n            projectContent = $('#task_breakerProjectContent').val();\n\n        }\n\n    var __http_params = {\n        action: 'task_breaker_transactions_request',\n        method: 'task_breaker_transactions_update_project',\n        id: parseInt( $('#task_breaker-project-id').val() ),\n        title: $( '#task_breaker-project-name' ).val(),\n        content: projectContent,\n        group_id: parseInt( $('select[name=task_breaker-project-assigned-group]').val() ),\n        nonce: task_breakerProjectSettings.nonce\n    };\n\n    element.attr('disabled', true).text('Updating ...');\n\n    ThriveProjectView.progress(true);\n\n    $('.task_breaker-project-updated').remove();\n\n    $.ajax({\n        url: ajaxurl,\n        data: __http_params,\n        method: 'post',\n        success: function( response ) {\n\n            ThriveProjectView.progress(false);\n\n            element.attr('disabled', false).text('Update Project');\n\n            if (response.message === 'success') {\n\n                // Update the project title.\n                $('article .entry-header > .entry-title').text($('#task_breaker-project-name').val());\n\n                element.parent().parent().prepend(\n                    '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                    '<p>Project details successfully updated.</p>' +\n                    '</div>'\n                );\n\n                location.reload();\n\n            } else {\n\n                if (\"authentication_error\" === response.type ) {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated error updated\">' +\n                        '<p>Only group administrators and moderators can update the project settings.</p>' +\n                        '</div>'\n                    );\n\n                } else {\n\n                    element.parent().parent().prepend(\n                        '<div id=\"message\" class=\"task_breaker-project-updated success updated\">' +\n                        '<p>There was an error saving the project. All fields are required.</p>' +\n                        '</div>'\n                    );\n\n                }\n\n            }\n\n            ThriveProjectView.progress(false);\n\n            setTimeout(function() {\n\n                $('.task_breaker-project-updated').fadeOut();\n\n            }, 3000);\n\n            return;\n\n        },\n\n        error: function() {\n\n            alert('connection failure');\n            return;\n\n        }\n    });\n}); // Project Update End.\n\n $('body').on('click', '#task_breakerDeleteProjectBtn', function() {\n\n\n     if ( !confirm('Are you sure you want to delete this project? All the tickets under this project will be deleted as well. This action cannot be undone.')) {\n         return;\n     }\n\n     var project_id = $('#task_breaker-project-id').val();\n\n     var __http_params = {\n         action: 'task_breaker_transactions_request',\n         method: 'task_breaker_transactions_delete_project',\n         id: project_id,\n         nonce: task_breakerProjectSettings.nonce\n     };\n\n     $(this).text('Deleting...');\n\n     $.ajax({\n\n         url: ajaxurl,\n\n         method: 'post',\n\n         data: __http_params,\n\n         success: function( response ) {\n\n             if (response.message == 'success') {\n\n                 window.location = response.redirect;\n\n             } else {\n\n                this.error();\n\n             }\n\n             return;\n\n         },\n\n         error: function() {\n\n            alert('There was an error trying to delete this post. Try again later.');\n\n         }\n     });\n\n });\n\n}); // end $(window).load();\n}); // end jQuery(document).ready(); "]}